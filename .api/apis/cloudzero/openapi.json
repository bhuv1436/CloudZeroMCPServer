{
  "openapi": "3.1.0",
  "info": {
    "version": "2.0.0",
    "title": "CloudZero API V2 Resources",
    "description": "CloudZero V2 API",
    "contact": {
      "name": "CloudZero Support",
      "url": "https://www.cloudzero.com/contact",
      "email": "support@cloudzero.com"
    },
    "license": {
      "name": "BSD 3",
      "identifier": "BSD-3"
    }
  },
  "servers": [
    {
      "url": "https://api.cloudzero.com"
    }
  ],
  "tags": [
    {
      "name": "budgets",
      "description": "Budget Resources"
    },
    {
      "name": "costformation",
      "description": "CloudZero CostFormation Resources"
    },
    {
      "name": "insights",
      "description": "Insight Resources"
    },
    {
      "name": "views",
      "description": "View Resources"
    },
    {
      "name": "billing_connections",
      "description": "Billing Connection Resources"
    },
    {
      "name": "billing",
      "description": "Billing Resources"
    }
  ],
  "paths": {
    "/v2/insights": {
      "get": {
        "operationId": "getInsights",
        "description": "Get a list of Insights",
        "tags": [
          "insights"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of items to return per page",
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "description": "Allows you to page forward and back in your results. NOTE: This must be URL Encoded!\n - See the [Pagination](https://docs.cloudzero.com/reference/pagination) section of the API Reference for more information!\n",
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Sortable Insight properties",
              "type": "string",
              "enum": [
                "category",
                "cost_impact",
                "effort",
                "last_updated",
                "status",
                "title"
              ]
            }
          },
          {
            "description": "ASC or DESC sort order",
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "hide_resolved (Deprecated)",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Prefer filtering by Status.",
              "type": "boolean"
            }
          },
          {
            "description": "If passed, query will be filtered by the properties specified.\nThis is a multi-value query parameter, pass it more than once to specify multiple values, e.g.\n  - `&status=new&status=in_progress`\n",
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "new",
                  "in_progress",
                  "on_hold",
                  "addressed",
                  "ignored"
                ]
              }
            }
          },
          {
            "description": "If passed, query will be filtered by the properties specified.\nThis is a multi-value query parameter, pass it more than once to specify multiple values, e.g.\n  - `&effort=low&effort=medium`\n",
            "name": "effort",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "not_set",
                  "low",
                  "medium",
                  "high"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "description": "Supports programmatic pagination",
                      "type": "object",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "item_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "next_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "previous_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "has_next": {
                              "type": "boolean"
                            },
                            "has_previous": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "sorting": {
                      "allOf": [
                        {
                          "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
                          "example": {
                            "available": {
                              "sort_keys": [
                                "last_updated"
                              ],
                              "sort_orders": [
                                "asc",
                                "desc"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "object",
                              "properties": {
                                "sort_keys": {
                                  "type": "array",
                                  "items": {
                                    "description": "Sortable Insight properties",
                                    "type": "string",
                                    "enum": [
                                      "category",
                                      "cost_impact",
                                      "effort",
                                      "last_updated",
                                      "status",
                                      "title"
                                    ]
                                  },
                                  "example": [
                                    "category",
                                    "cost_impact",
                                    "effort",
                                    "last_updated",
                                    "status",
                                    "title"
                                  ]
                                },
                                "sort_orders": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  },
                                  "example": [
                                    "asc",
                                    "desc"
                                  ]
                                }
                              }
                            },
                            "current": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "sort_key": {
                                    "description": "Sortable Insight properties",
                                    "type": "string",
                                    "enum": [
                                      "category",
                                      "cost_impact",
                                      "effort",
                                      "last_updated",
                                      "status",
                                      "title"
                                    ]
                                  },
                                  "sort_order": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "filtering": {
                      "allOf": [
                        {
                          "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string"
                                  },
                                  "valid_values": {
                                    "type": "array"
                                  },
                                  "valid_types": {
                                    "type": "array",
                                    "items": "string"
                                  }
                                }
                              }
                            },
                            "current": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array"
                              }
                            }
                          }
                        },
                        {
                          "example": {
                            "available": [
                              {
                                "field": "hide_resolved",
                                "valid_values": [
                                  true,
                                  false
                                ],
                                "valid_types": [
                                  "boolean"
                                ]
                              }
                            ],
                            "current": {
                              "hide_resolved": [
                                false
                              ]
                            }
                          }
                        }
                      ]
                    },
                    "insights": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "effort": {
                                "type": "string",
                                "enum": [
                                  "not_set",
                                  "low",
                                  "medium",
                                  "high"
                                ]
                              },
                              "cost_impact": {
                                "description": "String or float representation of a dollar amount",
                                "oneOf": [
                                  {
                                    "description": "String representation of a dollar amount",
                                    "type": "string",
                                    "pattern": "^\\d+(\\.\\d{1,})?$",
                                    "default": "1.0"
                                  },
                                  {
                                    "type": "number",
                                    "format": "float"
                                  }
                                ]
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "new",
                                  "in_progress",
                                  "on_hold",
                                  "addressed",
                                  "ignored"
                                ]
                              },
                              "category": {
                                "type": "string"
                              },
                              "link": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "title": {
                                "type": "string"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "created": {
                                "description": "UTC timestamp for the creation of this entity",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$"
                              }
                            },
                            "required": [
                              "created"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "last_updated": {
                                "description": "UTC timestamp for the last update of this entity",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$"
                              }
                            },
                            "required": [
                              "last_updated"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "cost_impact": {
                                "description": "String representation of a dollar amount",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$",
                                "default": "1.0"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "createInsight",
        "description": "Create a new Insight",
        "tags": [
          "insights"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "effort": {
                    "type": "string",
                    "enum": [
                      "not_set",
                      "low",
                      "medium",
                      "high"
                    ]
                  },
                  "cost_impact": {
                    "description": "String or float representation of a dollar amount",
                    "oneOf": [
                      {
                        "description": "String representation of a dollar amount",
                        "type": "string",
                        "pattern": "^\\d+(\\.\\d{1,})?$",
                        "default": "1.0"
                      },
                      {
                        "type": "number",
                        "format": "float"
                      }
                    ]
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "new",
                      "in_progress",
                      "on_hold",
                      "addressed",
                      "ignored"
                    ]
                  },
                  "category": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insight": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "effort": {
                              "type": "string",
                              "enum": [
                                "not_set",
                                "low",
                                "medium",
                                "high"
                              ]
                            },
                            "cost_impact": {
                              "description": "String or float representation of a dollar amount",
                              "oneOf": [
                                {
                                  "description": "String representation of a dollar amount",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$",
                                  "default": "1.0"
                                },
                                {
                                  "type": "number",
                                  "format": "float"
                                }
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "new",
                                "in_progress",
                                "on_hold",
                                "addressed",
                                "ignored"
                              ]
                            },
                            "category": {
                              "type": "string"
                            },
                            "link": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "cost_impact": {
                              "description": "String representation of a dollar amount",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$",
                              "default": "1.0"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/insights/{insight_id}": {
      "get": {
        "operationId": "getOneInsight",
        "description": "Get a single Insight",
        "tags": [
          "insights"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Insight identifier",
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insight": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "effort": {
                              "type": "string",
                              "enum": [
                                "not_set",
                                "low",
                                "medium",
                                "high"
                              ]
                            },
                            "cost_impact": {
                              "description": "String or float representation of a dollar amount",
                              "oneOf": [
                                {
                                  "description": "String representation of a dollar amount",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$",
                                  "default": "1.0"
                                },
                                {
                                  "type": "number",
                                  "format": "float"
                                }
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "new",
                                "in_progress",
                                "on_hold",
                                "addressed",
                                "ignored"
                              ]
                            },
                            "category": {
                              "type": "string"
                            },
                            "link": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "cost_impact": {
                              "description": "String representation of a dollar amount",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$",
                              "default": "1.0"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneInsight",
        "description": "Delete a single Insight",
        "tags": [
          "insights"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Insight identifier",
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insight": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "patch": {
        "operationId": "updateOneInsight",
        "description": "Update a single Insight",
        "tags": [
          "insights"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Insight identifier",
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "effort": {
                    "type": "string",
                    "enum": [
                      "not_set",
                      "low",
                      "medium",
                      "high"
                    ]
                  },
                  "cost_impact": {
                    "description": "String or float representation of a dollar amount",
                    "oneOf": [
                      {
                        "description": "String representation of a dollar amount",
                        "type": "string",
                        "pattern": "^\\d+(\\.\\d{1,})?$",
                        "default": "1.0"
                      },
                      {
                        "type": "number",
                        "format": "float"
                      }
                    ]
                  },
                  "status": {
                    "type": "string",
                    "enum": [
                      "new",
                      "in_progress",
                      "on_hold",
                      "addressed",
                      "ignored"
                    ]
                  },
                  "category": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "title": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insight": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "effort": {
                              "type": "string",
                              "enum": [
                                "not_set",
                                "low",
                                "medium",
                                "high"
                              ]
                            },
                            "cost_impact": {
                              "description": "String or float representation of a dollar amount",
                              "oneOf": [
                                {
                                  "description": "String representation of a dollar amount",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$",
                                  "default": "1.0"
                                },
                                {
                                  "type": "number",
                                  "format": "float"
                                }
                              ]
                            },
                            "status": {
                              "type": "string",
                              "enum": [
                                "new",
                                "in_progress",
                                "on_hold",
                                "addressed",
                                "ignored"
                              ]
                            },
                            "category": {
                              "type": "string"
                            },
                            "link": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "title": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "cost_impact": {
                              "description": "String representation of a dollar amount",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$",
                              "default": "1.0"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/insights/{insight_id}/comments": {
      "get": {
        "operationId": "getCommentsForOneInsight",
        "description": "Get a list of Comments for an Insight",
        "tags": [
          "insights"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Insight identifier",
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "insight": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "comments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "message": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "message"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "created": {
                                "description": "UTC timestamp for the creation of this entity",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$"
                              }
                            },
                            "required": [
                              "created"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "last_updated": {
                                "description": "UTC timestamp for the last update of this entity",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$"
                              }
                            },
                            "required": [
                              "last_updated"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "author": {
                                "type": "string"
                              },
                              "insight": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              }
                            },
                            "required": [
                              "author",
                              "insight"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "createCommentForOneInsight",
        "description": "Create a new Comment for an Insight",
        "tags": [
          "insights"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Insight identifier",
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "author": {
                              "type": "string"
                            },
                            "insight": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "author",
                            "insight"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/insights/{insight_id}/comments/{comment_id}": {
      "patch": {
        "operationId": "updateOneCommentForOneInsight",
        "description": "Update one Comment for an Insight",
        "tags": [
          "insights"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Insight identifier",
            "name": "insight_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Comment identifier",
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "message": {
                    "type": "string"
                  }
                },
                "required": [
                  "message"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "comment": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "message"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "author": {
                              "type": "string"
                            },
                            "insight": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            }
                          },
                          "required": [
                            "author",
                            "insight"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/budgets": {
      "get": {
        "operationId": "getBudgets",
        "description": "Get a list of Budgets",
        "tags": [
          "budgets"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of items to return per page",
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "description": "Allows you to page forward and back in your results. NOTE: This must be URL Encoded!\n - See the [Pagination](https://docs.cloudzero.com/reference/pagination) section of the API Reference for more information!\n",
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Sortable Budget properties",
              "type": "string",
              "enum": [
                "last_updated",
                "name"
              ]
            }
          },
          {
            "description": "ASC or DESC sort order",
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "description": "If passed, query will expand the properties specified.\nThis is a multi-value query parameter, pass it more than once to specify multiple values, e.g.\n  - `&expand=current&expand=history`\n",
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "current"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "description": "Supports programmatic pagination",
                      "type": "object",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "item_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "next_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "previous_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "has_next": {
                              "type": "boolean"
                            },
                            "has_previous": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "sorting": {
                      "allOf": [
                        {
                          "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
                          "example": {
                            "available": {
                              "sort_keys": [
                                "last_updated"
                              ],
                              "sort_orders": [
                                "asc",
                                "desc"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "object",
                              "properties": {
                                "sort_keys": {
                                  "type": "array",
                                  "items": {
                                    "description": "Sortable Budget properties",
                                    "type": "string",
                                    "enum": [
                                      "last_updated",
                                      "name"
                                    ]
                                  },
                                  "example": [
                                    "last_updated",
                                    "name"
                                  ]
                                },
                                "sort_orders": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  },
                                  "example": [
                                    "asc",
                                    "desc"
                                  ]
                                }
                              }
                            },
                            "current": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "sort_key": {
                                    "description": "Sortable Budget properties",
                                    "type": "string",
                                    "enum": [
                                      "last_updated",
                                      "name"
                                    ]
                                  },
                                  "sort_order": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "filtering": {
                      "allOf": [
                        {
                          "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string"
                                  },
                                  "valid_values": {
                                    "type": "array"
                                  },
                                  "valid_types": {
                                    "type": "array",
                                    "items": "string"
                                  }
                                }
                              }
                            },
                            "current": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "budgets": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "description": "Budget name, must be unique within a View",
                                    "type": "string"
                                  },
                                  "planned_limits": {
                                    "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                                    "type": "object",
                                    "properties": {
                                      "monthly": {
                                        "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                                        "type": "object",
                                        "additionalProperties": {
                                          "description": "Amount for planned limit",
                                          "type": "object",
                                          "properties": {
                                            "amount": {
                                              "description": "String representation of a dollar amount",
                                              "type": "string",
                                              "pattern": "^\\d+(\\.\\d{1,})?$",
                                              "default": "1.0"
                                            }
                                          },
                                          "required": [
                                            "amount"
                                          ]
                                        },
                                        "example": {
                                          "2022-02-01T00:00:00+00:00": {
                                            "amount": "1000.00"
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "monthly"
                                    ],
                                    "example": {
                                      "monthly": {
                                        "2022-02-01T00:00:00+00:00": {
                                          "amount": "1000.00"
                                        }
                                      }
                                    }
                                  },
                                  "view": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ],
                                    "description": "View associated with this Budget"
                                  },
                                  "alerts": {
                                    "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string",
                                      "enum": [
                                        "Y",
                                        "N"
                                      ]
                                    },
                                    "example": {
                                      "80": "N",
                                      "100": "Y"
                                    }
                                  }
                                },
                                "required": [
                                  "name",
                                  "planned_limits",
                                  "view"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "created": {
                                    "description": "UTC timestamp for the creation of this entity",
                                    "type": "string",
                                    "pattern": "^\\d+(\\.\\d{1,})?$"
                                  }
                                },
                                "required": [
                                  "created"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "last_updated": {
                                    "description": "UTC timestamp for the last update of this entity",
                                    "type": "string",
                                    "pattern": "^\\d+(\\.\\d{1,})?$"
                                  }
                                },
                                "required": [
                                  "last_updated"
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "cost_type": {
                                    "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                                    "type": "string",
                                    "enum": [
                                      "real_cost"
                                    ]
                                  },
                                  "granularity": {
                                    "description": "Supported periods, e.g. \"monthly\"",
                                    "type": "string",
                                    "enum": [
                                      "monthly"
                                    ]
                                  }
                                },
                                "required": [
                                  "cost_type",
                                  "granularity"
                                ]
                              }
                            ]
                          },
                          {
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "description": "Budget name, must be unique within a View",
                                        "type": "string"
                                      },
                                      "planned_limits": {
                                        "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                                        "type": "object",
                                        "properties": {
                                          "monthly": {
                                            "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                                            "type": "object",
                                            "additionalProperties": {
                                              "description": "Amount for planned limit",
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "description": "String representation of a dollar amount",
                                                  "type": "string",
                                                  "pattern": "^\\d+(\\.\\d{1,})?$",
                                                  "default": "1.0"
                                                }
                                              },
                                              "required": [
                                                "amount"
                                              ]
                                            },
                                            "example": {
                                              "2022-02-01T00:00:00+00:00": {
                                                "amount": "1000.00"
                                              }
                                            }
                                          }
                                        },
                                        "required": [
                                          "monthly"
                                        ],
                                        "example": {
                                          "monthly": {
                                            "2022-02-01T00:00:00+00:00": {
                                              "amount": "1000.00"
                                            }
                                          }
                                        }
                                      },
                                      "view": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "id"
                                        ],
                                        "description": "View associated with this Budget"
                                      },
                                      "alerts": {
                                        "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                                        "type": "object",
                                        "additionalProperties": {
                                          "type": "string",
                                          "enum": [
                                            "Y",
                                            "N"
                                          ]
                                        },
                                        "example": {
                                          "80": "N",
                                          "100": "Y"
                                        }
                                      }
                                    },
                                    "required": [
                                      "name",
                                      "planned_limits",
                                      "view"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "created": {
                                        "description": "UTC timestamp for the creation of this entity",
                                        "type": "string",
                                        "pattern": "^\\d+(\\.\\d{1,})?$"
                                      }
                                    },
                                    "required": [
                                      "created"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "last_updated": {
                                        "description": "UTC timestamp for the last update of this entity",
                                        "type": "string",
                                        "pattern": "^\\d+(\\.\\d{1,})?$"
                                      }
                                    },
                                    "required": [
                                      "last_updated"
                                    ]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "cost_type": {
                                        "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                                        "type": "string",
                                        "enum": [
                                          "real_cost"
                                        ]
                                      },
                                      "granularity": {
                                        "description": "Supported periods, e.g. \"monthly\"",
                                        "type": "string",
                                        "enum": [
                                          "monthly"
                                        ]
                                      }
                                    },
                                    "required": [
                                      "cost_type",
                                      "granularity"
                                    ]
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "current": {
                                    "type": "object",
                                    "properties": {
                                      "actual": {
                                        "type": "string"
                                      },
                                      "planned": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "actual",
                                      "planned"
                                    ]
                                  }
                                },
                                "required": [
                                  "current"
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "createBudget",
        "description": "Create a new Budget",
        "tags": [
          "budgets"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Budget name, must be unique within a View",
                    "type": "string"
                  },
                  "planned_limits": {
                    "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                    "type": "object",
                    "properties": {
                      "monthly": {
                        "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                        "type": "object",
                        "additionalProperties": {
                          "description": "Amount for planned limit",
                          "type": "object",
                          "properties": {
                            "amount": {
                              "description": "String representation of a dollar amount",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$",
                              "default": "1.0"
                            }
                          },
                          "required": [
                            "amount"
                          ]
                        },
                        "example": {
                          "2022-02-01T00:00:00+00:00": {
                            "amount": "1000.00"
                          }
                        }
                      }
                    },
                    "required": [
                      "monthly"
                    ],
                    "example": {
                      "monthly": {
                        "2022-02-01T00:00:00+00:00": {
                          "amount": "1000.00"
                        }
                      }
                    }
                  },
                  "view": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "description": "View associated with this Budget"
                  },
                  "alerts": {
                    "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "Y",
                        "N"
                      ]
                    },
                    "example": {
                      "80": "N",
                      "100": "Y"
                    }
                  }
                },
                "required": [
                  "name",
                  "planned_limits",
                  "view"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "budget": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Budget name, must be unique within a View",
                              "type": "string"
                            },
                            "planned_limits": {
                              "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                              "type": "object",
                              "properties": {
                                "monthly": {
                                  "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                                  "type": "object",
                                  "additionalProperties": {
                                    "description": "Amount for planned limit",
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "description": "String representation of a dollar amount",
                                        "type": "string",
                                        "pattern": "^\\d+(\\.\\d{1,})?$",
                                        "default": "1.0"
                                      }
                                    },
                                    "required": [
                                      "amount"
                                    ]
                                  },
                                  "example": {
                                    "2022-02-01T00:00:00+00:00": {
                                      "amount": "1000.00"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "monthly"
                              ],
                              "example": {
                                "monthly": {
                                  "2022-02-01T00:00:00+00:00": {
                                    "amount": "1000.00"
                                  }
                                }
                              }
                            },
                            "view": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ],
                              "description": "View associated with this Budget"
                            },
                            "alerts": {
                              "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string",
                                "enum": [
                                  "Y",
                                  "N"
                                ]
                              },
                              "example": {
                                "80": "N",
                                "100": "Y"
                              }
                            }
                          },
                          "required": [
                            "name",
                            "planned_limits",
                            "view"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "cost_type": {
                              "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                              "type": "string",
                              "enum": [
                                "real_cost"
                              ]
                            },
                            "granularity": {
                              "description": "Supported periods, e.g. \"monthly\"",
                              "type": "string",
                              "enum": [
                                "monthly"
                              ]
                            }
                          },
                          "required": [
                            "cost_type",
                            "granularity"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/budgets/{budget_id}": {
      "get": {
        "operationId": "getOneBudget",
        "description": "Get a single Budget",
        "tags": [
          "budgets"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique budget identifier",
            "name": "budget_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, query will expand the properties specified.\nThis is a multi-value query parameter, pass it more than once to specify multiple values, e.g.\n  - `&expand=current&expand=history`\n",
            "name": "expand",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "current",
                  "history",
                  "burnup"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "budget": {
                      "anyOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Budget name, must be unique within a View",
                                  "type": "string"
                                },
                                "planned_limits": {
                                  "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                                  "type": "object",
                                  "properties": {
                                    "monthly": {
                                      "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                                      "type": "object",
                                      "additionalProperties": {
                                        "description": "Amount for planned limit",
                                        "type": "object",
                                        "properties": {
                                          "amount": {
                                            "description": "String representation of a dollar amount",
                                            "type": "string",
                                            "pattern": "^\\d+(\\.\\d{1,})?$",
                                            "default": "1.0"
                                          }
                                        },
                                        "required": [
                                          "amount"
                                        ]
                                      },
                                      "example": {
                                        "2022-02-01T00:00:00+00:00": {
                                          "amount": "1000.00"
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "monthly"
                                  ],
                                  "example": {
                                    "monthly": {
                                      "2022-02-01T00:00:00+00:00": {
                                        "amount": "1000.00"
                                      }
                                    }
                                  }
                                },
                                "view": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "id"
                                  ],
                                  "description": "View associated with this Budget"
                                },
                                "alerts": {
                                  "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                                  "type": "object",
                                  "additionalProperties": {
                                    "type": "string",
                                    "enum": [
                                      "Y",
                                      "N"
                                    ]
                                  },
                                  "example": {
                                    "80": "N",
                                    "100": "Y"
                                  }
                                }
                              },
                              "required": [
                                "name",
                                "planned_limits",
                                "view"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "created": {
                                  "description": "UTC timestamp for the creation of this entity",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$"
                                }
                              },
                              "required": [
                                "created"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "last_updated": {
                                  "description": "UTC timestamp for the last update of this entity",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$"
                                }
                              },
                              "required": [
                                "last_updated"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "cost_type": {
                                  "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                                  "type": "string",
                                  "enum": [
                                    "real_cost"
                                  ]
                                },
                                "granularity": {
                                  "description": "Supported periods, e.g. \"monthly\"",
                                  "type": "string",
                                  "enum": [
                                    "monthly"
                                  ]
                                }
                              },
                              "required": [
                                "cost_type",
                                "granularity"
                              ]
                            }
                          ]
                        },
                        {
                          "allOf": [
                            {
                              "allOf": [
                                {
                                  "allOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "description": "Budget name, must be unique within a View",
                                          "type": "string"
                                        },
                                        "planned_limits": {
                                          "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                                          "type": "object",
                                          "properties": {
                                            "monthly": {
                                              "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                                              "type": "object",
                                              "additionalProperties": {
                                                "description": "Amount for planned limit",
                                                "type": "object",
                                                "properties": {
                                                  "amount": {
                                                    "description": "String representation of a dollar amount",
                                                    "type": "string",
                                                    "pattern": "^\\d+(\\.\\d{1,})?$",
                                                    "default": "1.0"
                                                  }
                                                },
                                                "required": [
                                                  "amount"
                                                ]
                                              },
                                              "example": {
                                                "2022-02-01T00:00:00+00:00": {
                                                  "amount": "1000.00"
                                                }
                                              }
                                            }
                                          },
                                          "required": [
                                            "monthly"
                                          ],
                                          "example": {
                                            "monthly": {
                                              "2022-02-01T00:00:00+00:00": {
                                                "amount": "1000.00"
                                              }
                                            }
                                          }
                                        },
                                        "view": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "id"
                                          ],
                                          "description": "View associated with this Budget"
                                        },
                                        "alerts": {
                                          "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                                          "type": "object",
                                          "additionalProperties": {
                                            "type": "string",
                                            "enum": [
                                              "Y",
                                              "N"
                                            ]
                                          },
                                          "example": {
                                            "80": "N",
                                            "100": "Y"
                                          }
                                        }
                                      },
                                      "required": [
                                        "name",
                                        "planned_limits",
                                        "view"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "created": {
                                          "description": "UTC timestamp for the creation of this entity",
                                          "type": "string",
                                          "pattern": "^\\d+(\\.\\d{1,})?$"
                                        }
                                      },
                                      "required": [
                                        "created"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "last_updated": {
                                          "description": "UTC timestamp for the last update of this entity",
                                          "type": "string",
                                          "pattern": "^\\d+(\\.\\d{1,})?$"
                                        }
                                      },
                                      "required": [
                                        "last_updated"
                                      ]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "cost_type": {
                                          "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                                          "type": "string",
                                          "enum": [
                                            "real_cost"
                                          ]
                                        },
                                        "granularity": {
                                          "description": "Supported periods, e.g. \"monthly\"",
                                          "type": "string",
                                          "enum": [
                                            "monthly"
                                          ]
                                        }
                                      },
                                      "required": [
                                        "cost_type",
                                        "granularity"
                                      ]
                                    }
                                  ]
                                },
                                {
                                  "type": "object",
                                  "properties": {
                                    "current": {
                                      "type": "object",
                                      "properties": {
                                        "actual": {
                                          "type": "string"
                                        },
                                        "planned": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "actual",
                                        "planned"
                                      ]
                                    }
                                  },
                                  "required": [
                                    "current"
                                  ]
                                }
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "burnup": {
                                  "type": "object",
                                  "properties": {
                                    "daily": {
                                      "type": "object",
                                      "patternProperties": {
                                        "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                                          "type": "object",
                                          "properties": {
                                            "actual": {
                                              "type": "string"
                                            },
                                            "planned": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "actual",
                                            "planned"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "daily"
                                  ]
                                }
                              },
                              "required": [
                                "burnup"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "history": {
                                  "type": "object",
                                  "properties": {
                                    "monthly": {
                                      "type": "object",
                                      "patternProperties": {
                                        "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                                          "type": "object",
                                          "properties": {
                                            "actual": {
                                              "type": "string"
                                            },
                                            "planned": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "actual",
                                            "planned"
                                          ]
                                        }
                                      }
                                    },
                                    "quarterly": {
                                      "type": "object",
                                      "patternProperties": {
                                        "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                                          "type": "object",
                                          "properties": {
                                            "actual": {
                                              "type": "string"
                                            },
                                            "planned": {
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "actual",
                                            "planned"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "monthly",
                                    "quarterly"
                                  ]
                                }
                              },
                              "required": [
                                "history"
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "required": [
                    "budget"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "patch": {
        "operationId": "updateOneBudget",
        "description": "Update a single Budget",
        "tags": [
          "budgets"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique budget identifier",
            "name": "budget_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Budget name, must be unique within a View",
                    "type": "string"
                  },
                  "planned_limits": {
                    "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                    "type": "object",
                    "properties": {
                      "monthly": {
                        "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                        "type": "object",
                        "additionalProperties": {
                          "description": "Amount for planned limit",
                          "type": "object",
                          "properties": {
                            "amount": {
                              "description": "String representation of a dollar amount",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$",
                              "default": "1.0"
                            }
                          },
                          "required": [
                            "amount"
                          ]
                        },
                        "example": {
                          "2022-02-01T00:00:00+00:00": {
                            "amount": "1000.00"
                          }
                        }
                      }
                    },
                    "required": [
                      "monthly"
                    ],
                    "example": {
                      "monthly": {
                        "2022-02-01T00:00:00+00:00": {
                          "amount": "1000.00"
                        }
                      }
                    }
                  },
                  "view": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "description": "View associated with this Budget"
                  },
                  "alerts": {
                    "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "Y",
                        "N"
                      ]
                    },
                    "example": {
                      "80": "N",
                      "100": "Y"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "budget": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Budget name, must be unique within a View",
                              "type": "string"
                            },
                            "planned_limits": {
                              "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                              "type": "object",
                              "properties": {
                                "monthly": {
                                  "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                                  "type": "object",
                                  "additionalProperties": {
                                    "description": "Amount for planned limit",
                                    "type": "object",
                                    "properties": {
                                      "amount": {
                                        "description": "String representation of a dollar amount",
                                        "type": "string",
                                        "pattern": "^\\d+(\\.\\d{1,})?$",
                                        "default": "1.0"
                                      }
                                    },
                                    "required": [
                                      "amount"
                                    ]
                                  },
                                  "example": {
                                    "2022-02-01T00:00:00+00:00": {
                                      "amount": "1000.00"
                                    }
                                  }
                                }
                              },
                              "required": [
                                "monthly"
                              ],
                              "example": {
                                "monthly": {
                                  "2022-02-01T00:00:00+00:00": {
                                    "amount": "1000.00"
                                  }
                                }
                              }
                            },
                            "view": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "id"
                              ],
                              "description": "View associated with this Budget"
                            },
                            "alerts": {
                              "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string",
                                "enum": [
                                  "Y",
                                  "N"
                                ]
                              },
                              "example": {
                                "80": "N",
                                "100": "Y"
                              }
                            }
                          },
                          "required": [
                            "name",
                            "planned_limits",
                            "view"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "cost_type": {
                              "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                              "type": "string",
                              "enum": [
                                "real_cost"
                              ]
                            },
                            "granularity": {
                              "description": "Supported periods, e.g. \"monthly\"",
                              "type": "string",
                              "enum": [
                                "monthly"
                              ]
                            }
                          },
                          "required": [
                            "cost_type",
                            "granularity"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBudget",
        "description": "Delete a single Budget",
        "tags": [
          "budgets"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique budget identifier",
            "name": "budget_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "budget": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/costformation/definition/versions": {
      "get": {
        "operationId": "getCostFormationDefinitionVersions",
        "description": "Get a list of CloudZero CostFormation Definition Versions",
        "tags": [
          "costformation"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of items to return per page",
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "description": "Allows you to page forward and back in your results. NOTE: This must be URL Encoded!\n - See the [Pagination](https://docs.cloudzero.com/reference/pagination) section of the API Reference for more information!\n",
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Sortable CloudZero CostFormation Definition Properties",
              "type": "string",
              "enum": [
                "version"
              ]
            }
          },
          {
            "description": "ASC or DESC sort order",
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "description": "Supports programmatic pagination",
                      "type": "object",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "item_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "next_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "previous_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "has_next": {
                              "type": "boolean"
                            },
                            "has_previous": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "sorting": {
                      "allOf": [
                        {
                          "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
                          "example": {
                            "available": {
                              "sort_keys": [
                                "last_updated"
                              ],
                              "sort_orders": [
                                "asc",
                                "desc"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "object",
                              "properties": {
                                "sort_keys": {
                                  "type": "array",
                                  "items": {
                                    "description": "Sortable CloudZero CostFormation Definition Properties",
                                    "type": "string",
                                    "enum": [
                                      "version"
                                    ]
                                  },
                                  "example": [
                                    "version"
                                  ]
                                },
                                "sort_orders": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  },
                                  "example": [
                                    "asc",
                                    "desc"
                                  ]
                                }
                              }
                            },
                            "current": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "sort_key": {
                                    "description": "Sortable CloudZero CostFormation Definition Properties",
                                    "type": "string",
                                    "enum": [
                                      "version"
                                    ]
                                  },
                                  "sort_order": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "filtering": {
                      "allOf": [
                        {
                          "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string"
                                  },
                                  "valid_values": {
                                    "type": "array"
                                  },
                                  "valid_types": {
                                    "type": "array",
                                    "items": "string"
                                  }
                                }
                              }
                            },
                            "current": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "versions": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "version": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "version"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "last_updated": {
                                "description": "UTC timestamp for the last update of this entity",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$"
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "last_updated_by": {
                                "description": "email, username, or api key that created this entity (optional)",
                                "type": "string"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "createCostFormationDefinitionVersion",
        "description": "Create a new CloudZero CostFormation Definition Version",
        "tags": [
          "costformation"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the endpoint will only validate the CloudZero CostFormation definition, and NOT save or publish.\n",
            "name": "validate_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "array",
                    "items": {}
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "type": "object",
                      "description": "Response for creating new version",
                      "properties": {
                        "version": {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "version": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "version"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "last_updated": {
                                  "description": "UTC timestamp for the last update of this entity",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "last_updated_by": {
                                  "description": "email, username, or api key that created this entity (optional)",
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "type": "object",
                      "description": "Empty response if validate_only=true"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Bad CloudZero CostFormation Definition Version Create Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "message": {
                              "type": "string"
                            },
                            "type": {
                              "type": "string"
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "errors": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "error": {
                                    "type": "string"
                                  },
                                  "value": {
                                    "type": "string"
                                  },
                                  "path": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/costformation/definition/versions/{version}": {
      "get": {
        "operationId": "getOneCostFormationDefinitionVersion",
        "description": "Get a CloudZero CostFormation Definition Version",
        "tags": [
          "costformation"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique CloudZero CostFormation Definition Version; `latest` is as an alias for the most recent version.\n",
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "version": {
                      "allOf": [
                        {
                          "allOf": [
                            {
                              "type": "object",
                              "properties": {
                                "version": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "version"
                              ]
                            },
                            {
                              "type": "object",
                              "properties": {
                                "last_updated": {
                                  "description": "UTC timestamp for the last update of this entity",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$"
                                }
                              }
                            },
                            {
                              "type": "object",
                              "properties": {
                                "last_updated_by": {
                                  "description": "email, username, or api key that created this entity (optional)",
                                  "type": "string"
                                }
                              }
                            }
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "uri": {
                              "type": "string",
                              "format": "uri"
                            }
                          },
                          "required": [
                            "uri"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/views": {
      "get": {
        "operationId": "getViews",
        "description": "Get a list of Views",
        "tags": [
          "views"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of items to return per page",
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "description": "Allows you to page forward and back in your results. NOTE: This must be URL Encoded!\n - See the [Pagination](https://docs.cloudzero.com/reference/pagination) section of the API Reference for more information!\n",
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Sortable View properties",
              "type": "string",
              "enum": [
                "last_updated"
              ]
            }
          },
          {
            "description": "ASC or DESC sort order",
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "description": "Supports programmatic pagination",
                      "type": "object",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "item_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "next_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "previous_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "has_next": {
                              "type": "boolean"
                            },
                            "has_previous": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "sorting": {
                      "allOf": [
                        {
                          "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
                          "example": {
                            "available": {
                              "sort_keys": [
                                "last_updated"
                              ],
                              "sort_orders": [
                                "asc",
                                "desc"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "object",
                              "properties": {
                                "sort_keys": {
                                  "type": "array",
                                  "items": {
                                    "description": "Sortable View properties",
                                    "type": "string",
                                    "enum": [
                                      "last_updated"
                                    ]
                                  },
                                  "example": [
                                    "last_updated"
                                  ]
                                },
                                "sort_orders": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  },
                                  "example": [
                                    "asc",
                                    "desc"
                                  ]
                                }
                              }
                            },
                            "current": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "sort_key": {
                                    "description": "Sortable View properties",
                                    "type": "string",
                                    "enum": [
                                      "last_updated"
                                    ]
                                  },
                                  "sort_order": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "filtering": {
                      "allOf": [
                        {
                          "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string"
                                  },
                                  "valid_values": {
                                    "type": "array"
                                  },
                                  "valid_types": {
                                    "type": "array",
                                    "items": "string"
                                  }
                                }
                              }
                            },
                            "current": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "views": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "View name",
                                "type": "string"
                              },
                              "filter": {
                                "description": "Filter mapping of dimension name to allowed values",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "filters",
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "example": {
                                  "accounts": [
                                    "123456789012"
                                  ]
                                }
                              },
                              "connections": {
                                "description": "Contains the connections that will receive notifications for this view",
                                "type": "object",
                                "properties": {
                                  "email": {
                                    "description": "Email Connection",
                                    "type": "object",
                                    "properties": {
                                      "addresses": {
                                        "description": "List of email addresses to notify",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        }
                                      },
                                      "include_all_organizers": {
                                        "description": "Whether or not to additionally notifiy all organizers in the organization",
                                        "type": "boolean"
                                      }
                                    }
                                  },
                                  "slack": {
                                    "type": "array",
                                    "items": {
                                      "description": "Slack Connection",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "id",
                                        "name"
                                      ]
                                    }
                                  }
                                }
                              },
                              "principal_dimension": {
                                "description": "primary group by dimension for the view",
                                "type": "string"
                              },
                              "anomalies": {
                                "type": "object",
                                "description": "Anomalies configuration for the view. These fields are used to configure the anomaly detection for the view. \nAnomalies are detected by comparing the cost of a given day to the cost of the previous day. \nIf the cost of the current day is greater than or equal to the threshold, an anomaly event will be generated. \nThe anomaly event will be sent to the configured connections for the view. \nThe following fields are used to configure the anomaly detection:\n",
                                "properties": {
                                  "enabled": {
                                    "description": "Specifies whether or not to enable anomaly detection for the view.\n  `true` (Default): anomaly detection is enabled for the view\n  `false`: anomaly detection is disabled for the view\n",
                                    "type": "boolean"
                                  },
                                  "threshold_type": {
                                    "description": "Type of threshold to use when detecting anomalies within this view. This field, combined with the `threshold_value` \nfield sets the threshold for anomalies detected within this view. The threshold is used to determine if a day to day \ncost spike is considered an anomaly. The cost spike  must be greater \nor equal to the threshold in order generate an anomaly event. The following values are currently supported:\n  `Automatic`: the threshold will be automatically calculated using a sliding scale based on the view's cost\n  `Percent`: the threshold will be a percentage of the view's cost\n",
                                    "type": "string",
                                    "enum": [
                                      "Automatic",
                                      "Percent"
                                    ]
                                  },
                                  "threshold_value": {
                                    "description": "Value of the threshold to apply to anomalies for the specified view. The value is interpreted based on the `threshold_type`:\n  `Automatic`: threshold_value is ignored when the threshold type is `Automatic`\n  `Percent`: threshold_value is the percentage of the view's cost to use as the threshold\n",
                                    "type": "integer"
                                  }
                                }
                              }
                            },
                            "required": [
                              "name",
                              "principal_dimension",
                              "connections",
                              "filter"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "last_updated": {
                                "description": "UTC timestamp for the last update of this entity",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$"
                              }
                            },
                            "required": [
                              "last_updated"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/views/{view_id}": {
      "get": {
        "operationId": "getOneView",
        "description": "Get a single View",
        "tags": [
          "views"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique View identifier",
            "name": "view_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "view": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "View name",
                              "type": "string"
                            },
                            "filter": {
                              "description": "Filter mapping of dimension name to allowed values",
                              "type": "object",
                              "additionalProperties": {
                                "description": "filters",
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "example": {
                                "accounts": [
                                  "123456789012"
                                ]
                              }
                            },
                            "connections": {
                              "description": "Contains the connections that will receive notifications for this view",
                              "type": "object",
                              "properties": {
                                "email": {
                                  "description": "Email Connection",
                                  "type": "object",
                                  "properties": {
                                    "addresses": {
                                      "description": "List of email addresses to notify",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "include_all_organizers": {
                                      "description": "Whether or not to additionally notifiy all organizers in the organization",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "slack": {
                                  "type": "array",
                                  "items": {
                                    "description": "Slack Connection",
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string"
                                      },
                                      "name": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "id",
                                      "name"
                                    ]
                                  }
                                }
                              }
                            },
                            "principal_dimension": {
                              "description": "primary group by dimension for the view",
                              "type": "string"
                            },
                            "anomalies": {
                              "type": "object",
                              "description": "Anomalies configuration for the view. These fields are used to configure the anomaly detection for the view. \nAnomalies are detected by comparing the cost of a given day to the cost of the previous day. \nIf the cost of the current day is greater than or equal to the threshold, an anomaly event will be generated. \nThe anomaly event will be sent to the configured connections for the view. \nThe following fields are used to configure the anomaly detection:\n",
                              "properties": {
                                "enabled": {
                                  "description": "Specifies whether or not to enable anomaly detection for the view.\n  `true` (Default): anomaly detection is enabled for the view\n  `false`: anomaly detection is disabled for the view\n",
                                  "type": "boolean"
                                },
                                "threshold_type": {
                                  "description": "Type of threshold to use when detecting anomalies within this view. This field, combined with the `threshold_value` \nfield sets the threshold for anomalies detected within this view. The threshold is used to determine if a day to day \ncost spike is considered an anomaly. The cost spike  must be greater \nor equal to the threshold in order generate an anomaly event. The following values are currently supported:\n  `Automatic`: the threshold will be automatically calculated using a sliding scale based on the view's cost\n  `Percent`: the threshold will be a percentage of the view's cost\n",
                                  "type": "string",
                                  "enum": [
                                    "Automatic",
                                    "Percent"
                                  ]
                                },
                                "threshold_value": {
                                  "description": "Value of the threshold to apply to anomalies for the specified view. The value is interpreted based on the `threshold_type`:\n  `Automatic`: threshold_value is ignored when the threshold type is `Automatic`\n  `Percent`: threshold_value is the percentage of the view's cost to use as the threshold\n",
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "required": [
                            "name",
                            "principal_dimension",
                            "connections",
                            "filter"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/connections/billing": {
      "get": {
        "operationId": "getBillingConnections",
        "description": "Get a list of Billing Connections",
        "tags": [
          "billing_connections"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Number of items to return per page",
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "format": "int32"
            }
          },
          {
            "description": "Allows you to page forward and back in your results. NOTE: This must be URL Encoded!\n - See the [Pagination](https://docs.cloudzero.com/reference/pagination) section of the API Reference for more information!\n",
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_key",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Sortable Billing Connection properties",
              "type": "string",
              "enum": [
                "connection_name",
                "creation_date",
                "name",
                "cloud_provider",
                "created",
                "last_updated",
                "is_enabled"
              ]
            }
          },
          {
            "description": "ASC or DESC sort order",
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pagination": {
                      "description": "Supports programmatic pagination",
                      "type": "object",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "item_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "next_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "previous_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "has_next": {
                              "type": "boolean"
                            },
                            "has_previous": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    },
                    "sorting": {
                      "allOf": [
                        {
                          "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
                          "example": {
                            "available": {
                              "sort_keys": [
                                "last_updated"
                              ],
                              "sort_orders": [
                                "asc",
                                "desc"
                              ]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "object",
                              "properties": {
                                "sort_keys": {
                                  "type": "array",
                                  "items": {
                                    "description": "Sortable Billing Connection properties",
                                    "type": "string",
                                    "enum": [
                                      "connection_name",
                                      "creation_date",
                                      "name",
                                      "cloud_provider",
                                      "created",
                                      "last_updated",
                                      "is_enabled"
                                    ]
                                  },
                                  "example": [
                                    "last_updated"
                                  ]
                                },
                                "sort_orders": {
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  },
                                  "example": [
                                    "asc",
                                    "desc"
                                  ]
                                }
                              }
                            },
                            "current": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "sort_key": {
                                    "description": "Sortable Billing Connection properties",
                                    "type": "string",
                                    "enum": [
                                      "connection_name",
                                      "creation_date",
                                      "name",
                                      "cloud_provider",
                                      "created",
                                      "last_updated",
                                      "is_enabled"
                                    ]
                                  },
                                  "sort_order": {
                                    "type": "string",
                                    "enum": [
                                      "asc",
                                      "desc"
                                    ]
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "filtering": {
                      "allOf": [
                        {
                          "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
                          "type": "object",
                          "properties": {
                            "available": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "field": {
                                    "type": "string"
                                  },
                                  "valid_values": {
                                    "type": "array"
                                  },
                                  "valid_types": {
                                    "type": "array",
                                    "items": "string"
                                  }
                                }
                              }
                            },
                            "current": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "array"
                              }
                            }
                          }
                        }
                      ]
                    },
                    "connections": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              },
                              "name": {
                                "type": "string"
                              },
                              "connection_type": {
                                "type": "string"
                              },
                              "cloud_provider": {
                                "type": "string"
                              },
                              "s3_bucket_info": {
                                "type": "object",
                                "properties": {
                                  "bucket_name": {
                                    "type": "string",
                                    "example": [
                                      "test-bucket"
                                    ]
                                  },
                                  "bucket_path": {
                                    "type": "string",
                                    "example": [
                                      "path/to/data"
                                    ]
                                  },
                                  "cloud_account_id": {
                                    "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "bucket_name",
                                  "bucket_path"
                                ]
                              },
                              "expected_ingest_rate": {
                                "type": "number",
                                "format": "float"
                              },
                              "is_enabled": {
                                "type": "boolean"
                              },
                              "capabilities": {
                                "type": "object"
                              },
                              "is_draft": {
                                "type": "boolean"
                              },
                              "connection_id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "name",
                              "connection_type",
                              "cloud_provider",
                              "s3_bucket_info",
                              "expected_ingest_rate",
                              "is_enabled",
                              "capabilities",
                              "is_draft",
                              "connection_id"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "created": {
                                "description": "UTC timestamp for the creation of this entity",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$"
                              }
                            },
                            "required": [
                              "created"
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "last_updated": {
                                "description": "UTC timestamp for the last update of this entity",
                                "type": "string",
                                "pattern": "^\\d+(\\.\\d{1,})?$"
                              }
                            },
                            "required": [
                              "last_updated"
                            ]
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "createBillingConnection",
        "description": "Create a new Billing Connection",
        "tags": [
          "billing_connections"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "cloud_provider": {
                    "type": "string",
                    "example": [
                      "NewRelic",
                      "MongoDB"
                    ]
                  },
                  "expected_ingest_rate": {
                    "type": [
                      "number",
                      null
                    ]
                  },
                  "is_enabled": {
                    "type": "boolean"
                  },
                  "s3_bucket_info": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "bucket_name": {
                            "type": "string",
                            "example": [
                              "test-bucket"
                            ]
                          },
                          "bucket_path": {
                            "type": "string",
                            "example": [
                              "path/to/data"
                            ]
                          },
                          "cloud_account_id": {
                            "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "bucket_name",
                          "bucket_path"
                        ]
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "cloud_provider"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "connection_type": {
                              "type": "string"
                            },
                            "cloud_provider": {
                              "type": "string"
                            },
                            "s3_bucket_info": {
                              "type": "object",
                              "properties": {
                                "bucket_name": {
                                  "type": "string",
                                  "example": [
                                    "test-bucket"
                                  ]
                                },
                                "bucket_path": {
                                  "type": "string",
                                  "example": [
                                    "path/to/data"
                                  ]
                                },
                                "cloud_account_id": {
                                  "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "bucket_name",
                                "bucket_path"
                              ]
                            },
                            "expected_ingest_rate": {
                              "type": "number",
                              "format": "float"
                            },
                            "is_enabled": {
                              "type": "boolean"
                            },
                            "capabilities": {
                              "type": "object"
                            },
                            "is_draft": {
                              "type": "boolean"
                            },
                            "connection_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "connection_type",
                            "cloud_provider",
                            "s3_bucket_info",
                            "expected_ingest_rate",
                            "is_enabled",
                            "capabilities",
                            "is_draft",
                            "connection_id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/connections/billing/{connection_id}": {
      "get": {
        "operationId": "getOneBillingConnection",
        "description": "Get a single Billing Connection",
        "tags": [
          "billing_connections"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Billing Connection identifier",
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "connection_type": {
                              "type": "string"
                            },
                            "cloud_provider": {
                              "type": "string"
                            },
                            "s3_bucket_info": {
                              "type": "object",
                              "properties": {
                                "bucket_name": {
                                  "type": "string",
                                  "example": [
                                    "test-bucket"
                                  ]
                                },
                                "bucket_path": {
                                  "type": "string",
                                  "example": [
                                    "path/to/data"
                                  ]
                                },
                                "cloud_account_id": {
                                  "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "bucket_name",
                                "bucket_path"
                              ]
                            },
                            "expected_ingest_rate": {
                              "type": "number",
                              "format": "float"
                            },
                            "is_enabled": {
                              "type": "boolean"
                            },
                            "capabilities": {
                              "type": "object"
                            },
                            "is_draft": {
                              "type": "boolean"
                            },
                            "connection_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "connection_type",
                            "cloud_provider",
                            "s3_bucket_info",
                            "expected_ingest_rate",
                            "is_enabled",
                            "capabilities",
                            "is_draft",
                            "connection_id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "patch": {
        "operationId": "updateOneBillingConnection",
        "description": "Update a single Billing Connection\nNote: Billing Connections managed by CloudZero AnyCost adaptors (e.g., Azure, GCP, AWS) cannot be modified.\nThis operation is supported for custom connections only.\n",
        "tags": [
          "billing_connections"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Billing Connection identifier",
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "expected_ingest_rate": {
                    "type": [
                      "number",
                      null
                    ]
                  },
                  "is_enabled": {
                    "type": "boolean"
                  },
                  "s3_bucket_info": {
                    "anyOf": [
                      {
                        "type": "object",
                        "properties": {
                          "bucket_name": {
                            "type": "string",
                            "example": [
                              "test-bucket"
                            ]
                          },
                          "bucket_path": {
                            "type": "string",
                            "example": [
                              "path/to/data"
                            ]
                          },
                          "cloud_account_id": {
                            "type": [
                              "string",
                              null
                            ],
                            "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into."
                          }
                        }
                      },
                      {
                        "type": "null"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "connection_type": {
                              "type": "string"
                            },
                            "cloud_provider": {
                              "type": "string"
                            },
                            "s3_bucket_info": {
                              "type": "object",
                              "properties": {
                                "bucket_name": {
                                  "type": "string",
                                  "example": [
                                    "test-bucket"
                                  ]
                                },
                                "bucket_path": {
                                  "type": "string",
                                  "example": [
                                    "path/to/data"
                                  ]
                                },
                                "cloud_account_id": {
                                  "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "bucket_name",
                                "bucket_path"
                              ]
                            },
                            "expected_ingest_rate": {
                              "type": "number",
                              "format": "float"
                            },
                            "is_enabled": {
                              "type": "boolean"
                            },
                            "capabilities": {
                              "type": "object"
                            },
                            "is_draft": {
                              "type": "boolean"
                            },
                            "connection_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "connection_type",
                            "cloud_provider",
                            "s3_bucket_info",
                            "expected_ingest_rate",
                            "is_enabled",
                            "capabilities",
                            "is_draft",
                            "connection_id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "delete": {
        "operationId": "deleteOneBillingConnection",
        "description": "Delete a single Billing Connection\nUpon disconnect of a billing connection, after the next ingest, all billing data related to that connection will be removed from the platform. However, be aware that although this data is no longer visible in the platform, it will still exist in the CloudZero data stores. If you need a more permanent deletion due to audit or security concerns, see your CloudZero Account Manager.\nNote: This is not supported for AWS and Snowflake connections\n",
        "tags": [
          "billing_connections"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Billing Connection identifier",
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "connection_type": {
                              "type": "string"
                            },
                            "cloud_provider": {
                              "type": "string"
                            },
                            "s3_bucket_info": {
                              "type": "object",
                              "properties": {
                                "bucket_name": {
                                  "type": "string",
                                  "example": [
                                    "test-bucket"
                                  ]
                                },
                                "bucket_path": {
                                  "type": "string",
                                  "example": [
                                    "path/to/data"
                                  ]
                                },
                                "cloud_account_id": {
                                  "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                                  "type": "string"
                                }
                              },
                              "required": [
                                "bucket_name",
                                "bucket_path"
                              ]
                            },
                            "expected_ingest_rate": {
                              "type": "number",
                              "format": "float"
                            },
                            "is_enabled": {
                              "type": "boolean"
                            },
                            "capabilities": {
                              "type": "object"
                            },
                            "is_draft": {
                              "type": "boolean"
                            },
                            "connection_id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "name",
                            "connection_type",
                            "cloud_provider",
                            "s3_bucket_info",
                            "expected_ingest_rate",
                            "is_enabled",
                            "capabilities",
                            "is_draft",
                            "connection_id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "created": {
                              "description": "UTC timestamp for the creation of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "created"
                          ]
                        },
                        {
                          "type": "object",
                          "properties": {
                            "last_updated": {
                              "description": "UTC timestamp for the last update of this entity",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$"
                            }
                          },
                          "required": [
                            "last_updated"
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/connections/billing/anycost/{connection_id}/billing_drops": {
      "get": {
        "operationId": "getAnyCostStreamConnectionBillingDrops",
        "description": "Get all AnyCost Stream Connection Billing Drops\n",
        "tags": [
          "anycost_stream"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Billing Connection identifier",
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "billing_drops": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "drop_id": {
                            "type": "string"
                          },
                          "month": {
                            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                            "type": "string",
                            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                            "default": "2025-01-01T00:00:00Z"
                          },
                          "row_count": {
                            "type": "integer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      },
      "post": {
        "operationId": "createOneAnyCostStreamConnectionBillingDrop",
        "description": "Create a single AnyCost Stream Connection Billing Drop.\nNote: An uncompressed request body larger than 5 MB will result in a 413 Request Entity Too Large response\n",
        "tags": [
          "anycost_stream"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Billing Connection identifier",
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "month": {
                    "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                    "default": "2025-01-01T00:00:00Z"
                  },
                  "operation": {
                    "description": "The type of operation to perform on the data.\n- `replace_drop`: Replace the data with the new data.\n- `replace_hourly`: Replace the data that have overlapping hours with the new data\n- `sum`: Append data to the existing data\nIf no prior data exists, a new drop with `data` will be created\n",
                    "type": "string",
                    "default": "replace_drop",
                    "enum": [
                      "replace_drop",
                      "replace_hourly",
                      "sum"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "description": "https://docs.cloudzero.com/docs/anycost-common-bill-format-cbf#data-file-columns",
                      "type": "object",
                      "properties": {
                        "lineitem/id": {
                          "type": "string"
                        },
                        "lineitem/type": {
                          "type": "string",
                          "default": "Usage",
                          "enum": [
                            "Usage",
                            "Tax",
                            "Support",
                            "Purchase",
                            "CommittedUsePurchase",
                            "Discount",
                            "Credit",
                            "Fee",
                            "Adjustment"
                          ]
                        },
                        "lineitem/description": {
                          "type": "string"
                        },
                        "time/usage_start": {
                          "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                          "type": "string",
                          "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                          "default": "2025-01-01T00:00:00Z"
                        },
                        "time/usage_end": {
                          "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                          "type": "string",
                          "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                          "default": "2025-01-01T00:00:00Z"
                        },
                        "resource/id": {
                          "type": "string"
                        },
                        "resource/service": {
                          "type": "string"
                        },
                        "resource/account": {
                          "type": "string"
                        },
                        "resource/region": {
                          "type": "string"
                        },
                        "resource/usage_family": {
                          "type": "string"
                        },
                        "action/operation": {
                          "type": "string"
                        },
                        "action/usage_type": {
                          "type": "string"
                        },
                        "action/region": {
                          "type": "string"
                        },
                        "action/account": {
                          "type": "string"
                        },
                        "usage/amount": {
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "usage/units": {
                          "type": "string",
                          "default": "1"
                        },
                        "cost/cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "cost/discounted_cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "cost/amortized_cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "cost/discounted_amortized_cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "cost/on_demand_cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "bill/invoice_id": {
                          "type": "string"
                        },
                        "k8s/cluster": {
                          "type": "string"
                        },
                        "k8s/namespace": {
                          "type": "string"
                        },
                        "k8s/deployment": {
                          "type": "string"
                        },
                        "k8s/labels": {
                          "type": "string"
                        }
                      },
                      "patternProperties": {
                        "resource/tag:.+": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "time/usage_start",
                        "cost/cost"
                      ]
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "type": "object",
                      "properties": {
                        "drop_id": {
                          "type": "string"
                        },
                        "month": {
                          "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                          "type": "string",
                          "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                          "default": "2025-01-01T00:00:00Z"
                        },
                        "row_count": {
                          "type": "integer"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/connections/billing/anycost/{connection_id}/billing_drops/{month}": {
      "get": {
        "operationId": "getAnyCostStreamConnectionBillingDropContents",
        "description": "Read AnyCost Stream Connection Billing Drop contents\n",
        "tags": [
          "anycost_stream"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Unique Billing Connection identifier",
            "name": "connection_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Billing drop month (format YYYY-MM, e.g., 2023-10)",
            "name": "month",
            "in": "path",
            "required": true,
            "schema": {
              "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
              "type": "string",
              "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
              "default": "2025-01-01T00:00:00Z"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "billing_drop": {
                      "type": "array",
                      "items": {
                        "description": "https://docs.cloudzero.com/docs/anycost-common-bill-format-cbf#data-file-columns",
                        "type": "object",
                        "properties": {
                          "lineitem/id": {
                            "type": "string"
                          },
                          "lineitem/type": {
                            "type": "string",
                            "default": "Usage",
                            "enum": [
                              "Usage",
                              "Tax",
                              "Support",
                              "Purchase",
                              "CommittedUsePurchase",
                              "Discount",
                              "Credit",
                              "Fee",
                              "Adjustment"
                            ]
                          },
                          "lineitem/description": {
                            "type": "string"
                          },
                          "time/usage_start": {
                            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                            "type": "string",
                            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                            "default": "2025-01-01T00:00:00Z"
                          },
                          "time/usage_end": {
                            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                            "type": "string",
                            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                            "default": "2025-01-01T00:00:00Z"
                          },
                          "resource/id": {
                            "type": "string"
                          },
                          "resource/service": {
                            "type": "string"
                          },
                          "resource/account": {
                            "type": "string"
                          },
                          "resource/region": {
                            "type": "string"
                          },
                          "resource/usage_family": {
                            "type": "string"
                          },
                          "action/operation": {
                            "type": "string"
                          },
                          "action/usage_type": {
                            "type": "string"
                          },
                          "action/region": {
                            "type": "string"
                          },
                          "action/account": {
                            "type": "string"
                          },
                          "usage/amount": {
                            "type": "string",
                            "pattern": "^\\d+(\\.\\d{1,})?$",
                            "default": "1.0"
                          },
                          "usage/units": {
                            "type": "string",
                            "default": "1"
                          },
                          "cost/cost": {
                            "description": "String representation of a dollar amount",
                            "type": "string",
                            "pattern": "^\\d+(\\.\\d{1,})?$",
                            "default": "1.0"
                          },
                          "cost/discounted_cost": {
                            "description": "String representation of a dollar amount",
                            "type": "string",
                            "pattern": "^\\d+(\\.\\d{1,})?$",
                            "default": "1.0"
                          },
                          "cost/amortized_cost": {
                            "description": "String representation of a dollar amount",
                            "type": "string",
                            "pattern": "^\\d+(\\.\\d{1,})?$",
                            "default": "1.0"
                          },
                          "cost/discounted_amortized_cost": {
                            "description": "String representation of a dollar amount",
                            "type": "string",
                            "pattern": "^\\d+(\\.\\d{1,})?$",
                            "default": "1.0"
                          },
                          "cost/on_demand_cost": {
                            "description": "String representation of a dollar amount",
                            "type": "string",
                            "pattern": "^\\d+(\\.\\d{1,})?$",
                            "default": "1.0"
                          },
                          "bill/invoice_id": {
                            "type": "string"
                          },
                          "k8s/cluster": {
                            "type": "string"
                          },
                          "k8s/namespace": {
                            "type": "string"
                          },
                          "k8s/deployment": {
                            "type": "string"
                          },
                          "k8s/labels": {
                            "type": "string"
                          }
                        },
                        "patternProperties": {
                          "resource/tag:.+": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "time/usage_start",
                          "cost/cost"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/connections/billing/anycost/validate_billing_drop": {
      "post": {
        "operationId": "validateOneAnyCostStreamConnectionBillingDrop",
        "description": "Validate a single AnyCost Stream Connection Billing Drop.\nNote: An uncompressed request body larger than 5 MB will result in a 413 Request Entity Too Large response\n",
        "tags": [
          "anycost_stream"
        ],
        "parameters": [
          {
            "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
            "name": "cloudzero-idempotency-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
            "name": "cloudzero-test-key",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "month": {
                    "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                    "type": "string",
                    "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                    "default": "2025-01-01T00:00:00Z"
                  },
                  "operation": {
                    "description": "The type of operation to perform on the data.\n- `replace_drop`: Replace the data with the new data.\n- `replace_hourly`: Replace the data that have overlapping hours with the new data\n- `sum`: Append data to the existing data\nIf no prior data exists, a new drop with `data` will be created\n",
                    "type": "string",
                    "default": "replace_drop",
                    "enum": [
                      "replace_drop",
                      "replace_hourly",
                      "sum"
                    ]
                  },
                  "data": {
                    "type": "array",
                    "items": {
                      "description": "https://docs.cloudzero.com/docs/anycost-common-bill-format-cbf#data-file-columns",
                      "type": "object",
                      "properties": {
                        "lineitem/id": {
                          "type": "string"
                        },
                        "lineitem/type": {
                          "type": "string",
                          "default": "Usage",
                          "enum": [
                            "Usage",
                            "Tax",
                            "Support",
                            "Purchase",
                            "CommittedUsePurchase",
                            "Discount",
                            "Credit",
                            "Fee",
                            "Adjustment"
                          ]
                        },
                        "lineitem/description": {
                          "type": "string"
                        },
                        "time/usage_start": {
                          "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                          "type": "string",
                          "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                          "default": "2025-01-01T00:00:00Z"
                        },
                        "time/usage_end": {
                          "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                          "type": "string",
                          "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                          "default": "2025-01-01T00:00:00Z"
                        },
                        "resource/id": {
                          "type": "string"
                        },
                        "resource/service": {
                          "type": "string"
                        },
                        "resource/account": {
                          "type": "string"
                        },
                        "resource/region": {
                          "type": "string"
                        },
                        "resource/usage_family": {
                          "type": "string"
                        },
                        "action/operation": {
                          "type": "string"
                        },
                        "action/usage_type": {
                          "type": "string"
                        },
                        "action/region": {
                          "type": "string"
                        },
                        "action/account": {
                          "type": "string"
                        },
                        "usage/amount": {
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "usage/units": {
                          "type": "string",
                          "default": "1"
                        },
                        "cost/cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "cost/discounted_cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "cost/amortized_cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "cost/discounted_amortized_cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "cost/on_demand_cost": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        },
                        "bill/invoice_id": {
                          "type": "string"
                        },
                        "k8s/cluster": {
                          "type": "string"
                        },
                        "k8s/namespace": {
                          "type": "string"
                        },
                        "k8s/deployment": {
                          "type": "string"
                        },
                        "k8s/labels": {
                          "type": "string"
                        }
                      },
                      "patternProperties": {
                        "resource/tag:.+": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "time/usage_start",
                        "cost/cost"
                      ]
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "type": "object",
                      "properties": {
                        "is_valid": {
                          "type": "boolean"
                        },
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "413": {
            "description": "Request Entity Too Large Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/billing/costs": {
      "get": {
        "operationId": "getBillingCosts",
        "description": "This API will return cost data according to the parameters passed in.\n\n- Rate Limit: 60 requests/day.\n- Timeout: 30 seconds.\n- Pagination: Results are paginated in blocks of 10,000 records.\n  - Using cursors for pagination doesn't affect the rate limit.\n  - You have 24 hours to page through your results before you will need to rerun your query.\n  - While using pagination, your results will be static as of run time.\n- This data is statically sorted as `usage_date asc`.     \n\n NOTE: The Dimension IDs referenced within this document are the IDs by which you reference dimensions when authoring in CostFormation. You can read more about this [here](https://docs.cloudzero.com/docs/costformation-definition-language-guide#specifying-sources).\n\n**API Call Examples**\nFor the following examples, the following updates need to be made before running:\n- Replace <START_DATE_HERE> with a properly formatted start date (`2023-10-26` or (date and time encoded) `2023-10-26T14%3A27%3A46%2B00%3A00`)  \n- Replace <GRANULARITY_VALUE_HERE> with the desired granularity (`hourly`, `daily`,  `weekly`, `monthly`, `yearly`)\n\n**Real Cost Grouped by Account and Service, Filtered by Cloud Provider = AWS**\n- `https://api.cloudzero.com/v2/billing/costs?start_date=<START_DATE_HERE>&granularity=<GRANULARITY_VALUE_HERE>&group_by=Account&group_by=Service&filters=%7B%22CloudProvider%22%3A%20%5B%22AWS%22%5D%7D&cost_type=real_cost`\n\n**Real Cost Grouped by Account and Service Detail Dimension, Filtered by Service = AmazonS3**\n- `https://api.cloudzero.com/v2/billing/costs?start_date=<START_DATE_HERE>&granularity=<GRANULARITY_VALUE_HERE>&group_by=Account&group_by=CZ%3ADefined%3AServiceDetail&filters=%7B%22Service%22%3A%20%5B%22AmazonS3%22%5D%7D&cost_type=real_cost`        \n\n**Real Cost Grouped by by Account Name and Service**\n- `https://api.cloudzero.com/v2/billing/costs?start_date=<START_DATE_HERE>&granularity=<GRANULARITY_VALUE_HERE>&group_by=User%3ADefined%3AAccountName&group_by=Service&cost_type=real_cost`\n",
        "tags": [
          "billing"
        ],
        "parameters": [
          {
            "description": "ISO 8601 datetime string from which to view costs.\n- When using this form: `2023-10-26T14:27:46+00:00`\n- When using HTTP URL (This must be encoded!): \n    - Encoded: `2023-10-26T14%3A27%3A46%2B00%3A00`\n    - Decoded: `2023-10-26T14:27:46+00:00`        \n",
            "name": "start_date",
            "in": "query",
            "required": true,
            "schema": {
              "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
              "type": "string",
              "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
              "default": "2025-01-01T00:00:00Z"
            }
          },
          {
            "description": "ISO 8601 datetime string until which to view costs (defaults to current date and time).\n- When using this form: `2023-10-26T14:27:46+00:00`\n- When using HTTP URL (This must be encoded!): \n    - Encoded: `2023-10-26T14%3A27%3A46%2B00%3A00`\n    - Decoded: `2023-10-26T14:27:46+00:00`   \n",
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
              "type": "string",
              "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
              "default": "2025-01-01T00:00:00Z"
            }
          },
          {
            "name": "granularity",
            "in": "query",
            "required": false,
            "schema": {
              "description": "Supported periods, e.g. \"daily\"",
              "type": "string",
              "enum": [
                "hourly",
                "daily",
                "weekly",
                "monthly",
                "yearly"
              ],
              "default": "daily"
            }
          },
          {
            "description": "Dimension ID(s) by which to group the results. This is a multi-value query parameter, pass it more than once to specify multiple values.\n  -  When using this form: `Region` and `Tag:Name`\n  -  When using HTTP URL: `&group_by=Region&group_by=Tag:Name`\n",
            "name": "group_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "description": "Identifier of a CloudZero Dimension, as used in the CostFormation language.\nSee https://docs.cloudzero.com/docs/dimensions for details.\n",
                "type": "string"
              }
            }
          },
          {
            "description": "An encoded JSON mapping of Dimension IDs to values by which to filter the results. The keys are dimension IDs; they may be negated with a '!' prefix. \n  - When using this form (Do not encode): \n    - `{\"Region\": [\"us-east-1\"], \"!Account\": [\"123456789012\"]}`\n  - When using HTTP URL (This must be encoded!): \n    - Encoded: `%26filters%3D%7B%22Region%22%3A%20%5B%22us-east-1%22%5D%2C%20%22%21Account%22%3A%20%5B%22123456789012%22%5D%7D`     \n    - Decoded: `&filters={\"Region\": [\"us-east-1\"], \"!Account\": [\"123456789012\"]}` \n",
            "name": "filters",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "cost_type",
            "in": "query",
            "required": false,
            "schema": {
              "description": "https://docs.cloudzero.com/docs/explorer#cost-types",
              "type": "string",
              "enum": [
                "billed_cost",
                "discounted_cost",
                "amortized_cost",
                "discounted_amortized_cost",
                "real_cost",
                "on_demand_cost",
                "invoiced_amortized_cost",
                "usage_amount"
              ],
              "default": "real_cost"
            }
          },
          {
            "description": "Allows you to page forward and back in your results. NOTE: This must be URL Encoded!\n - See the [Pagination](https://docs.cloudzero.com/reference/pagination) section of the API Reference for more information!\n",
            "name": "cursor",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "costs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Cost for a given usage date and set of group_by dimensions.\nThe response will contain additional fields based on the group by parameters passed in.\n\nYour response will look similar to this (with `Region` group by field as an example):\n\n \n `{\n\n\n    \"costs\": \n\n\n      [\n\n\n        {\n          \"usage_date\": \"2023-10-02T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-east-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-02T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-west-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-21T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-east-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-22T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-west-1\"\n        } \n\n\n      ],\n\n\n    \"pagination\": \n\n\n      {\n        \"page_count\": 1,\n        \"item_count\": 32,\n        \"total_count\": 32,\n        \"cursor\": {\n          \"next_cursor\": null,\n          \"previous_cursor\": null,\n          \"has_next\": false,\n          \"has_previous\": false\n        }\n      },\n\n\n    \"sorting\": \n\n\n      {\n        \"available\": {\n          \"sort_keys\": [\n            \"usage_date\"\n          ],\n          \"sort_orders\": [\n            \"asc\"\n          ]\n        },\n        \"current\": [\n          {\n            \"sort_key\": \"usage_date\",\n            \"sort_order\": \"asc\"\n          }\n        ]\n      },\n\n\n    \"filtering\": \n\n\n     {\n        \"available\": [],\n        \"current\": {}\n      },\n\n\n      \"total_count\": 32\n\n      \n  }`\n",
                        "properties": {
                          "usage_date": {
                            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                            "type": "string",
                            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                            "default": "2025-01-01T00:00:00Z"
                          },
                          "cost": {
                            "type": "number",
                            "format": "float"
                          }
                        }
                      }
                    },
                    "pagination": {
                      "description": "Supports programmatic pagination",
                      "type": "object",
                      "properties": {
                        "page_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "item_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "total_count": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "cursor": {
                          "type": "object",
                          "properties": {
                            "next_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "previous_cursor": {
                              "type": [
                                "string",
                                null
                              ]
                            },
                            "has_next": {
                              "type": "boolean"
                            },
                            "has_previous": {
                              "type": "boolean"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "Expired Cache Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    },
    "/v2/billing/dimensions": {
      "get": {
        "operationId": "getBillingDimensions",
        "description": "This API will return a list of dimensions available for use in the `getBillingCosts` API and in CostFormation.\n",
        "tags": [
          "billing"
        ],
        "parameters": [
          {
            "name": "include_hidden",
            "description": "Include dimensions marked as hidden in CostFormation, which do not appear in the CloudZero Explorer\n",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "dimensions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "A CloudZero dimension available for use in our APIs and CostFormation.\n",
                        "properties": {
                          "id": {
                            "description": "Identifier of a CloudZero Dimension, as used in the CostFormation language.\nSee https://docs.cloudzero.com/docs/dimensions for details.\n",
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "message"
                  ]
                }
              }
            }
          },
          "410": {
            "description": "Expired Cache Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "Rate Limit Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "cloudzero_test_key": {
        "description": "If passed, the operation executes in the namespace specified by this key.\nResource mutations in the namespace last for 1 hour.\n",
        "name": "cloudzero-test-key",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "cloudzero_idempotency_key": {
        "description": "If passed, any subsequent operation with the same value for this header will return the exact same result.\nThis is true for all responses, i.e. successes and errors.\n",
        "name": "cloudzero-idempotency-key",
        "in": "header",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "description": "Number of items to return per page",
        "name": "limit",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number",
          "format": "int32"
        }
      },
      "cursor": {
        "description": "Allows you to page forward and back in your results. NOTE: This must be URL Encoded!\n - See the [Pagination](https://docs.cloudzero.com/reference/pagination) section of the API Reference for more information!\n",
        "name": "cursor",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "sort_order": {
        "description": "ASC or DESC sort order",
        "name": "sort_order",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        }
      },
      "insight_id": {
        "description": "Unique Insight identifier",
        "name": "insight_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "comment_id": {
        "description": "Unique Comment identifier",
        "name": "comment_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "budget_id": {
        "description": "Unique budget identifier",
        "name": "budget_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "budget_get_all_expand": {
        "description": "If passed, query will expand the properties specified.\nThis is a multi-value query parameter, pass it more than once to specify multiple values, e.g.\n  - `&expand=current&expand=history`\n",
        "name": "expand",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "current"
            ]
          }
        }
      },
      "budget_get_one_expand": {
        "description": "If passed, query will expand the properties specified.\nThis is a multi-value query parameter, pass it more than once to specify multiple values, e.g.\n  - `&expand=current&expand=history`\n",
        "name": "expand",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "current",
              "history",
              "burnup"
            ]
          }
        }
      },
      "costformation_definition_version": {
        "description": "Unique CloudZero CostFormation Definition Version; `latest` is as an alias for the most recent version.\n",
        "name": "version",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "costformation_definition_validate_only": {
        "description": "If passed, the endpoint will only validate the CloudZero CostFormation definition, and NOT save or publish.\n",
        "name": "validate_only",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      },
      "view_id": {
        "description": "Unique View identifier",
        "name": "view_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "connection_id": {
        "description": "Unique Billing Connection identifier",
        "name": "connection_id",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "month": {
        "description": "Billing drop month (format YYYY-MM, e.g., 2023-10)",
        "name": "month",
        "in": "path",
        "required": true,
        "schema": {
          "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
          "type": "string",
          "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
          "default": "2025-01-01T00:00:00Z"
        }
      },
      "billing_start_date": {
        "description": "ISO 8601 datetime string from which to view costs.\n- When using this form: `2023-10-26T14:27:46+00:00`\n- When using HTTP URL (This must be encoded!): \n    - Encoded: `2023-10-26T14%3A27%3A46%2B00%3A00`\n    - Decoded: `2023-10-26T14:27:46+00:00`        \n",
        "name": "start_date",
        "in": "query",
        "required": true,
        "schema": {
          "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
          "type": "string",
          "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
          "default": "2025-01-01T00:00:00Z"
        }
      },
      "billing_end_date": {
        "description": "ISO 8601 datetime string until which to view costs (defaults to current date and time).\n- When using this form: `2023-10-26T14:27:46+00:00`\n- When using HTTP URL (This must be encoded!): \n    - Encoded: `2023-10-26T14%3A27%3A46%2B00%3A00`\n    - Decoded: `2023-10-26T14:27:46+00:00`   \n",
        "name": "end_date",
        "in": "query",
        "required": false,
        "schema": {
          "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
          "type": "string",
          "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
          "default": "2025-01-01T00:00:00Z"
        }
      },
      "billing_group_by": {
        "description": "Dimension ID(s) by which to group the results. This is a multi-value query parameter, pass it more than once to specify multiple values.\n  -  When using this form: `Region` and `Tag:Name`\n  -  When using HTTP URL: `&group_by=Region&group_by=Tag:Name`\n",
        "name": "group_by",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "description": "Identifier of a CloudZero Dimension, as used in the CostFormation language.\nSee https://docs.cloudzero.com/docs/dimensions for details.\n",
            "type": "string"
          }
        }
      },
      "billing_filters": {
        "description": "An encoded JSON mapping of Dimension IDs to values by which to filter the results. The keys are dimension IDs; they may be negated with a '!' prefix. \n  - When using this form (Do not encode): \n    - `{\"Region\": [\"us-east-1\"], \"!Account\": [\"123456789012\"]}`\n  - When using HTTP URL (This must be encoded!): \n    - Encoded: `%26filters%3D%7B%22Region%22%3A%20%5B%22us-east-1%22%5D%2C%20%22%21Account%22%3A%20%5B%22123456789012%22%5D%7D`     \n    - Decoded: `&filters={\"Region\": [\"us-east-1\"], \"!Account\": [\"123456789012\"]}` \n",
        "name": "filters",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "notFoundError": {
        "description": "Not Found Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "forbiddenError": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "badRequestError": {
        "description": "Bad Request Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "rateLimitError": {
        "description": "Rate Limit Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "requestEntityTooLargeError": {
        "description": "Request Entity Too Large Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            }
          }
        }
      },
      "expiredCacheError": {
        "description": "Expired Cache Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "badCostFormationDefinitionVersionCreateRequestError": {
        "description": "Bad CloudZero CostFormation Definition Version Create Request Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "errors": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "error": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              },
                              "path": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "text_plain": {
        "type": "string"
      },
      "nullable_string": {
        "type": [
          "string",
          null
        ]
      },
      "nullable_number": {
        "type": [
          "number",
          null
        ]
      },
      "error": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "currency": {
        "description": "String representation of a dollar amount",
        "type": "string",
        "pattern": "^\\d+(\\.\\d{1,})?$",
        "default": "1.0"
      },
      "currency_in": {
        "description": "String or float representation of a dollar amount",
        "oneOf": [
          {
            "description": "String representation of a dollar amount",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$",
            "default": "1.0"
          },
          {
            "type": "number",
            "format": "float"
          }
        ]
      },
      "epoch": {
        "description": "String representation of an epoch (UTC timestamp)",
        "type": "string",
        "pattern": "^\\d+(\\.\\d{1,})?$"
      },
      "iso_datetime": {
        "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
        "type": "string",
        "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
        "default": "2025-01-01T00:00:00Z"
      },
      "dimension_id": {
        "description": "Identifier of a CloudZero Dimension, as used in the CostFormation language.\nSee https://docs.cloudzero.com/docs/dimensions for details.\n",
        "type": "string"
      },
      "multipart_form_data_files": {
        "type": "object",
        "properties": {
          "file": {
            "type": "array",
            "items": {}
          }
        }
      },
      "with_id": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        },
        "required": [
          "id"
        ]
      },
      "with_uri": {
        "type": "object",
        "properties": {
          "uri": {
            "type": "string",
            "format": "uri"
          }
        },
        "required": [
          "uri"
        ]
      },
      "with_version": {
        "type": "object",
        "properties": {
          "version": {
            "type": "string"
          }
        },
        "required": [
          "version"
        ]
      },
      "with_created": {
        "type": "object",
        "properties": {
          "created": {
            "description": "UTC timestamp for the creation of this entity",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$"
          }
        },
        "required": [
          "created"
        ]
      },
      "with_last_updated": {
        "type": "object",
        "properties": {
          "last_updated": {
            "description": "UTC timestamp for the last update of this entity",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$"
          }
        },
        "required": [
          "last_updated"
        ]
      },
      "with_last_updated_opt": {
        "type": "object",
        "properties": {
          "last_updated": {
            "description": "UTC timestamp for the last update of this entity",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$"
          }
        }
      },
      "with_last_updated_by_opt": {
        "type": "object",
        "properties": {
          "last_updated_by": {
            "description": "email, username, or api key that created this entity (optional)",
            "type": "string"
          }
        }
      },
      "pagination": {
        "description": "Supports programmatic pagination",
        "type": "object",
        "properties": {
          "page_count": {
            "type": "integer",
            "format": "int32"
          },
          "item_count": {
            "type": "integer",
            "format": "int32"
          },
          "total_count": {
            "type": "integer",
            "format": "int32"
          },
          "cursor": {
            "type": "object",
            "properties": {
              "next_cursor": {
                "type": [
                  "string",
                  null
                ]
              },
              "previous_cursor": {
                "type": [
                  "string",
                  null
                ]
              },
              "has_next": {
                "type": "boolean"
              },
              "has_previous": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "sorting": {
        "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
        "example": {
          "available": {
            "sort_keys": [
              "last_updated"
            ],
            "sort_orders": [
              "asc",
              "desc"
            ]
          }
        }
      },
      "sort_order": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ]
      },
      "sort_orders": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "asc",
            "desc"
          ]
        },
        "example": [
          "asc",
          "desc"
        ]
      },
      "filtering": {
        "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
        "type": "object",
        "properties": {
          "available": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                },
                "valid_values": {
                  "type": "array"
                },
                "valid_types": {
                  "type": "array",
                  "items": "string"
                }
              }
            }
          },
          "current": {
            "type": "object",
            "additionalProperties": {
              "type": "array"
            }
          }
        }
      },
      "insight_new": {
        "type": "object",
        "properties": {
          "effort": {
            "type": "string",
            "enum": [
              "not_set",
              "low",
              "medium",
              "high"
            ]
          },
          "cost_impact": {
            "description": "String or float representation of a dollar amount",
            "oneOf": [
              {
                "description": "String representation of a dollar amount",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$",
                "default": "1.0"
              },
              {
                "type": "number",
                "format": "float"
              }
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "new",
              "in_progress",
              "on_hold",
              "addressed",
              "ignored"
            ]
          },
          "category": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          }
        }
      },
      "insight": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "effort": {
                "type": "string",
                "enum": [
                  "not_set",
                  "low",
                  "medium",
                  "high"
                ]
              },
              "cost_impact": {
                "description": "String or float representation of a dollar amount",
                "oneOf": [
                  {
                    "description": "String representation of a dollar amount",
                    "type": "string",
                    "pattern": "^\\d+(\\.\\d{1,})?$",
                    "default": "1.0"
                  },
                  {
                    "type": "number",
                    "format": "float"
                  }
                ]
              },
              "status": {
                "type": "string",
                "enum": [
                  "new",
                  "in_progress",
                  "on_hold",
                  "addressed",
                  "ignored"
                ]
              },
              "category": {
                "type": "string"
              },
              "link": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "title": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "created": {
                "description": "UTC timestamp for the creation of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "created"
            ]
          },
          {
            "type": "object",
            "properties": {
              "last_updated": {
                "description": "UTC timestamp for the last update of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "last_updated"
            ]
          },
          {
            "type": "object",
            "properties": {
              "cost_impact": {
                "description": "String representation of a dollar amount",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$",
                "default": "1.0"
              }
            }
          }
        ]
      },
      "insights": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "effort": {
                  "type": "string",
                  "enum": [
                    "not_set",
                    "low",
                    "medium",
                    "high"
                  ]
                },
                "cost_impact": {
                  "description": "String or float representation of a dollar amount",
                  "oneOf": [
                    {
                      "description": "String representation of a dollar amount",
                      "type": "string",
                      "pattern": "^\\d+(\\.\\d{1,})?$",
                      "default": "1.0"
                    },
                    {
                      "type": "number",
                      "format": "float"
                    }
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "new",
                    "in_progress",
                    "on_hold",
                    "addressed",
                    "ignored"
                  ]
                },
                "category": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "title": {
                  "type": "string"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "type": "object",
              "properties": {
                "created": {
                  "description": "UTC timestamp for the creation of this entity",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$"
                }
              },
              "required": [
                "created"
              ]
            },
            {
              "type": "object",
              "properties": {
                "last_updated": {
                  "description": "UTC timestamp for the last update of this entity",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$"
                }
              },
              "required": [
                "last_updated"
              ]
            },
            {
              "type": "object",
              "properties": {
                "cost_impact": {
                  "description": "String representation of a dollar amount",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$",
                  "default": "1.0"
                }
              }
            }
          ]
        }
      },
      "insight_sort_keys": {
        "description": "Sortable Insight properties",
        "type": "string",
        "enum": [
          "category",
          "cost_impact",
          "effort",
          "last_updated",
          "status",
          "title"
        ]
      },
      "insight_hide_resolved_filter": {
        "description": "Prefer filtering by Status.",
        "type": "boolean"
      },
      "insight_status_options": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "new",
            "in_progress",
            "on_hold",
            "addressed",
            "ignored"
          ]
        }
      },
      "insight_effort_options": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "not_set",
            "low",
            "medium",
            "high"
          ]
        }
      },
      "insight_filter_by_status": {
        "description": "If passed, query will be filtered by the properties specified.\nThis is a multi-value query parameter, pass it more than once to specify multiple values, e.g.\n  - `&status=new&status=in_progress`\n",
        "name": "status",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "new",
              "in_progress",
              "on_hold",
              "addressed",
              "ignored"
            ]
          }
        }
      },
      "insight_filter_by_effort": {
        "description": "If passed, query will be filtered by the properties specified.\nThis is a multi-value query parameter, pass it more than once to specify multiple values, e.g.\n  - `&effort=low&effort=medium`\n",
        "name": "effort",
        "in": "query",
        "required": false,
        "schema": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "not_set",
              "low",
              "medium",
              "high"
            ]
          }
        }
      },
      "insight_sorting": {
        "allOf": [
          {
            "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
            "example": {
              "available": {
                "sort_keys": [
                  "last_updated"
                ],
                "sort_orders": [
                  "asc",
                  "desc"
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "available": {
                "type": "object",
                "properties": {
                  "sort_keys": {
                    "type": "array",
                    "items": {
                      "description": "Sortable Insight properties",
                      "type": "string",
                      "enum": [
                        "category",
                        "cost_impact",
                        "effort",
                        "last_updated",
                        "status",
                        "title"
                      ]
                    },
                    "example": [
                      "category",
                      "cost_impact",
                      "effort",
                      "last_updated",
                      "status",
                      "title"
                    ]
                  },
                  "sort_orders": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    },
                    "example": [
                      "asc",
                      "desc"
                    ]
                  }
                }
              },
              "current": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sort_key": {
                      "description": "Sortable Insight properties",
                      "type": "string",
                      "enum": [
                        "category",
                        "cost_impact",
                        "effort",
                        "last_updated",
                        "status",
                        "title"
                      ]
                    },
                    "sort_order": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "insight_filtering": {
        "allOf": [
          {
            "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
            "type": "object",
            "properties": {
              "available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "valid_values": {
                      "type": "array"
                    },
                    "valid_types": {
                      "type": "array",
                      "items": "string"
                    }
                  }
                }
              },
              "current": {
                "type": "object",
                "additionalProperties": {
                  "type": "array"
                }
              }
            }
          },
          {
            "example": {
              "available": [
                {
                  "field": "hide_resolved",
                  "valid_values": [
                    true,
                    false
                  ],
                  "valid_types": [
                    "boolean"
                  ]
                }
              ],
              "current": {
                "hide_resolved": [
                  false
                ]
              }
            }
          }
        ]
      },
      "comment": {
        "type": "object",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              }
            },
            "required": [
              "message"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "created": {
                "description": "UTC timestamp for the creation of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "created"
            ]
          },
          {
            "type": "object",
            "properties": {
              "last_updated": {
                "description": "UTC timestamp for the last update of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "last_updated"
            ]
          },
          {
            "type": "object",
            "properties": {
              "author": {
                "type": "string"
              },
              "insight": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              }
            },
            "required": [
              "author",
              "insight"
            ]
          }
        ]
      },
      "comment_new": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ]
      },
      "comments": {
        "type": "array",
        "items": {
          "type": "object",
          "allOf": [
            {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                }
              },
              "required": [
                "message"
              ]
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "type": "object",
              "properties": {
                "created": {
                  "description": "UTC timestamp for the creation of this entity",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$"
                }
              },
              "required": [
                "created"
              ]
            },
            {
              "type": "object",
              "properties": {
                "last_updated": {
                  "description": "UTC timestamp for the last update of this entity",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$"
                }
              },
              "required": [
                "last_updated"
              ]
            },
            {
              "type": "object",
              "properties": {
                "author": {
                  "type": "string"
                },
                "insight": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id"
                  ]
                }
              },
              "required": [
                "author",
                "insight"
              ]
            }
          ]
        }
      },
      "budgets_granularity": {
        "description": "Supported periods, e.g. \"monthly\"",
        "type": "string",
        "enum": [
          "monthly"
        ]
      },
      "budgets_cost_type": {
        "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
        "type": "string",
        "enum": [
          "real_cost"
        ]
      },
      "budget": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "description": "Budget name, must be unique within a View",
                "type": "string"
              },
              "planned_limits": {
                "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                "type": "object",
                "properties": {
                  "monthly": {
                    "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                    "type": "object",
                    "additionalProperties": {
                      "description": "Amount for planned limit",
                      "type": "object",
                      "properties": {
                        "amount": {
                          "description": "String representation of a dollar amount",
                          "type": "string",
                          "pattern": "^\\d+(\\.\\d{1,})?$",
                          "default": "1.0"
                        }
                      },
                      "required": [
                        "amount"
                      ]
                    },
                    "example": {
                      "2022-02-01T00:00:00+00:00": {
                        "amount": "1000.00"
                      }
                    }
                  }
                },
                "required": [
                  "monthly"
                ],
                "example": {
                  "monthly": {
                    "2022-02-01T00:00:00+00:00": {
                      "amount": "1000.00"
                    }
                  }
                }
              },
              "view": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ],
                "description": "View associated with this Budget"
              },
              "alerts": {
                "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                "type": "object",
                "additionalProperties": {
                  "type": "string",
                  "enum": [
                    "Y",
                    "N"
                  ]
                },
                "example": {
                  "80": "N",
                  "100": "Y"
                }
              }
            },
            "required": [
              "name",
              "planned_limits",
              "view"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "created": {
                "description": "UTC timestamp for the creation of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "created"
            ]
          },
          {
            "type": "object",
            "properties": {
              "last_updated": {
                "description": "UTC timestamp for the last update of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "last_updated"
            ]
          },
          {
            "type": "object",
            "properties": {
              "cost_type": {
                "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                "type": "string",
                "enum": [
                  "real_cost"
                ]
              },
              "granularity": {
                "description": "Supported periods, e.g. \"monthly\"",
                "type": "string",
                "enum": [
                  "monthly"
                ]
              }
            },
            "required": [
              "cost_type",
              "granularity"
            ]
          }
        ]
      },
      "budget_current_expanded": {
        "allOf": [
          {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Budget name, must be unique within a View",
                    "type": "string"
                  },
                  "planned_limits": {
                    "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                    "type": "object",
                    "properties": {
                      "monthly": {
                        "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                        "type": "object",
                        "additionalProperties": {
                          "description": "Amount for planned limit",
                          "type": "object",
                          "properties": {
                            "amount": {
                              "description": "String representation of a dollar amount",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$",
                              "default": "1.0"
                            }
                          },
                          "required": [
                            "amount"
                          ]
                        },
                        "example": {
                          "2022-02-01T00:00:00+00:00": {
                            "amount": "1000.00"
                          }
                        }
                      }
                    },
                    "required": [
                      "monthly"
                    ],
                    "example": {
                      "monthly": {
                        "2022-02-01T00:00:00+00:00": {
                          "amount": "1000.00"
                        }
                      }
                    }
                  },
                  "view": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "description": "View associated with this Budget"
                  },
                  "alerts": {
                    "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "Y",
                        "N"
                      ]
                    },
                    "example": {
                      "80": "N",
                      "100": "Y"
                    }
                  }
                },
                "required": [
                  "name",
                  "planned_limits",
                  "view"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "created": {
                    "description": "UTC timestamp for the creation of this entity",
                    "type": "string",
                    "pattern": "^\\d+(\\.\\d{1,})?$"
                  }
                },
                "required": [
                  "created"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "last_updated": {
                    "description": "UTC timestamp for the last update of this entity",
                    "type": "string",
                    "pattern": "^\\d+(\\.\\d{1,})?$"
                  }
                },
                "required": [
                  "last_updated"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "cost_type": {
                    "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                    "type": "string",
                    "enum": [
                      "real_cost"
                    ]
                  },
                  "granularity": {
                    "description": "Supported periods, e.g. \"monthly\"",
                    "type": "string",
                    "enum": [
                      "monthly"
                    ]
                  }
                },
                "required": [
                  "cost_type",
                  "granularity"
                ]
              }
            ]
          },
          {
            "type": "object",
            "properties": {
              "current": {
                "type": "object",
                "properties": {
                  "actual": {
                    "type": "string"
                  },
                  "planned": {
                    "type": "string"
                  }
                },
                "required": [
                  "actual",
                  "planned"
                ]
              }
            },
            "required": [
              "current"
            ]
          }
        ]
      },
      "budget_fully_expanded": {
        "allOf": [
          {
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Budget name, must be unique within a View",
                        "type": "string"
                      },
                      "planned_limits": {
                        "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                        "type": "object",
                        "properties": {
                          "monthly": {
                            "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Amount for planned limit",
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "description": "String representation of a dollar amount",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$",
                                  "default": "1.0"
                                }
                              },
                              "required": [
                                "amount"
                              ]
                            },
                            "example": {
                              "2022-02-01T00:00:00+00:00": {
                                "amount": "1000.00"
                              }
                            }
                          }
                        },
                        "required": [
                          "monthly"
                        ],
                        "example": {
                          "monthly": {
                            "2022-02-01T00:00:00+00:00": {
                              "amount": "1000.00"
                            }
                          }
                        }
                      },
                      "view": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "description": "View associated with this Budget"
                      },
                      "alerts": {
                        "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "enum": [
                            "Y",
                            "N"
                          ]
                        },
                        "example": {
                          "80": "N",
                          "100": "Y"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "planned_limits",
                      "view"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "created": {
                        "description": "UTC timestamp for the creation of this entity",
                        "type": "string",
                        "pattern": "^\\d+(\\.\\d{1,})?$"
                      }
                    },
                    "required": [
                      "created"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "last_updated": {
                        "description": "UTC timestamp for the last update of this entity",
                        "type": "string",
                        "pattern": "^\\d+(\\.\\d{1,})?$"
                      }
                    },
                    "required": [
                      "last_updated"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cost_type": {
                        "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                        "type": "string",
                        "enum": [
                          "real_cost"
                        ]
                      },
                      "granularity": {
                        "description": "Supported periods, e.g. \"monthly\"",
                        "type": "string",
                        "enum": [
                          "monthly"
                        ]
                      }
                    },
                    "required": [
                      "cost_type",
                      "granularity"
                    ]
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "object",
                    "properties": {
                      "actual": {
                        "type": "string"
                      },
                      "planned": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "actual",
                      "planned"
                    ]
                  }
                },
                "required": [
                  "current"
                ]
              }
            ]
          },
          {
            "type": "object",
            "properties": {
              "burnup": {
                "type": "object",
                "properties": {
                  "daily": {
                    "type": "object",
                    "patternProperties": {
                      "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                        "type": "object",
                        "properties": {
                          "actual": {
                            "type": "string"
                          },
                          "planned": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "actual",
                          "planned"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "daily"
                ]
              }
            },
            "required": [
              "burnup"
            ]
          },
          {
            "type": "object",
            "properties": {
              "history": {
                "type": "object",
                "properties": {
                  "monthly": {
                    "type": "object",
                    "patternProperties": {
                      "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                        "type": "object",
                        "properties": {
                          "actual": {
                            "type": "string"
                          },
                          "planned": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "actual",
                          "planned"
                        ]
                      }
                    }
                  },
                  "quarterly": {
                    "type": "object",
                    "patternProperties": {
                      "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                        "type": "object",
                        "properties": {
                          "actual": {
                            "type": "string"
                          },
                          "planned": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "actual",
                          "planned"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "monthly",
                  "quarterly"
                ]
              }
            },
            "required": [
              "history"
            ]
          }
        ]
      },
      "budget_maybe_current_expanded": {
        "anyOf": [
          {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Budget name, must be unique within a View",
                    "type": "string"
                  },
                  "planned_limits": {
                    "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                    "type": "object",
                    "properties": {
                      "monthly": {
                        "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                        "type": "object",
                        "additionalProperties": {
                          "description": "Amount for planned limit",
                          "type": "object",
                          "properties": {
                            "amount": {
                              "description": "String representation of a dollar amount",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$",
                              "default": "1.0"
                            }
                          },
                          "required": [
                            "amount"
                          ]
                        },
                        "example": {
                          "2022-02-01T00:00:00+00:00": {
                            "amount": "1000.00"
                          }
                        }
                      }
                    },
                    "required": [
                      "monthly"
                    ],
                    "example": {
                      "monthly": {
                        "2022-02-01T00:00:00+00:00": {
                          "amount": "1000.00"
                        }
                      }
                    }
                  },
                  "view": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "description": "View associated with this Budget"
                  },
                  "alerts": {
                    "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "Y",
                        "N"
                      ]
                    },
                    "example": {
                      "80": "N",
                      "100": "Y"
                    }
                  }
                },
                "required": [
                  "name",
                  "planned_limits",
                  "view"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "created": {
                    "description": "UTC timestamp for the creation of this entity",
                    "type": "string",
                    "pattern": "^\\d+(\\.\\d{1,})?$"
                  }
                },
                "required": [
                  "created"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "last_updated": {
                    "description": "UTC timestamp for the last update of this entity",
                    "type": "string",
                    "pattern": "^\\d+(\\.\\d{1,})?$"
                  }
                },
                "required": [
                  "last_updated"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "cost_type": {
                    "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                    "type": "string",
                    "enum": [
                      "real_cost"
                    ]
                  },
                  "granularity": {
                    "description": "Supported periods, e.g. \"monthly\"",
                    "type": "string",
                    "enum": [
                      "monthly"
                    ]
                  }
                },
                "required": [
                  "cost_type",
                  "granularity"
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "allOf": [
                  {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Budget name, must be unique within a View",
                        "type": "string"
                      },
                      "planned_limits": {
                        "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                        "type": "object",
                        "properties": {
                          "monthly": {
                            "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                            "type": "object",
                            "additionalProperties": {
                              "description": "Amount for planned limit",
                              "type": "object",
                              "properties": {
                                "amount": {
                                  "description": "String representation of a dollar amount",
                                  "type": "string",
                                  "pattern": "^\\d+(\\.\\d{1,})?$",
                                  "default": "1.0"
                                }
                              },
                              "required": [
                                "amount"
                              ]
                            },
                            "example": {
                              "2022-02-01T00:00:00+00:00": {
                                "amount": "1000.00"
                              }
                            }
                          }
                        },
                        "required": [
                          "monthly"
                        ],
                        "example": {
                          "monthly": {
                            "2022-02-01T00:00:00+00:00": {
                              "amount": "1000.00"
                            }
                          }
                        }
                      },
                      "view": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ],
                        "description": "View associated with this Budget"
                      },
                      "alerts": {
                        "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                        "type": "object",
                        "additionalProperties": {
                          "type": "string",
                          "enum": [
                            "Y",
                            "N"
                          ]
                        },
                        "example": {
                          "80": "N",
                          "100": "Y"
                        }
                      }
                    },
                    "required": [
                      "name",
                      "planned_limits",
                      "view"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "created": {
                        "description": "UTC timestamp for the creation of this entity",
                        "type": "string",
                        "pattern": "^\\d+(\\.\\d{1,})?$"
                      }
                    },
                    "required": [
                      "created"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "last_updated": {
                        "description": "UTC timestamp for the last update of this entity",
                        "type": "string",
                        "pattern": "^\\d+(\\.\\d{1,})?$"
                      }
                    },
                    "required": [
                      "last_updated"
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "cost_type": {
                        "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                        "type": "string",
                        "enum": [
                          "real_cost"
                        ]
                      },
                      "granularity": {
                        "description": "Supported periods, e.g. \"monthly\"",
                        "type": "string",
                        "enum": [
                          "monthly"
                        ]
                      }
                    },
                    "required": [
                      "cost_type",
                      "granularity"
                    ]
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "current": {
                    "type": "object",
                    "properties": {
                      "actual": {
                        "type": "string"
                      },
                      "planned": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "actual",
                      "planned"
                    ]
                  }
                },
                "required": [
                  "current"
                ]
              }
            ]
          }
        ]
      },
      "budget_maybe_fully_expanded": {
        "anyOf": [
          {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Budget name, must be unique within a View",
                    "type": "string"
                  },
                  "planned_limits": {
                    "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                    "type": "object",
                    "properties": {
                      "monthly": {
                        "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                        "type": "object",
                        "additionalProperties": {
                          "description": "Amount for planned limit",
                          "type": "object",
                          "properties": {
                            "amount": {
                              "description": "String representation of a dollar amount",
                              "type": "string",
                              "pattern": "^\\d+(\\.\\d{1,})?$",
                              "default": "1.0"
                            }
                          },
                          "required": [
                            "amount"
                          ]
                        },
                        "example": {
                          "2022-02-01T00:00:00+00:00": {
                            "amount": "1000.00"
                          }
                        }
                      }
                    },
                    "required": [
                      "monthly"
                    ],
                    "example": {
                      "monthly": {
                        "2022-02-01T00:00:00+00:00": {
                          "amount": "1000.00"
                        }
                      }
                    }
                  },
                  "view": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "description": "View associated with this Budget"
                  },
                  "alerts": {
                    "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                    "type": "object",
                    "additionalProperties": {
                      "type": "string",
                      "enum": [
                        "Y",
                        "N"
                      ]
                    },
                    "example": {
                      "80": "N",
                      "100": "Y"
                    }
                  }
                },
                "required": [
                  "name",
                  "planned_limits",
                  "view"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  }
                },
                "required": [
                  "id"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "created": {
                    "description": "UTC timestamp for the creation of this entity",
                    "type": "string",
                    "pattern": "^\\d+(\\.\\d{1,})?$"
                  }
                },
                "required": [
                  "created"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "last_updated": {
                    "description": "UTC timestamp for the last update of this entity",
                    "type": "string",
                    "pattern": "^\\d+(\\.\\d{1,})?$"
                  }
                },
                "required": [
                  "last_updated"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "cost_type": {
                    "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                    "type": "string",
                    "enum": [
                      "real_cost"
                    ]
                  },
                  "granularity": {
                    "description": "Supported periods, e.g. \"monthly\"",
                    "type": "string",
                    "enum": [
                      "monthly"
                    ]
                  }
                },
                "required": [
                  "cost_type",
                  "granularity"
                ]
              }
            ]
          },
          {
            "allOf": [
              {
                "allOf": [
                  {
                    "allOf": [
                      {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Budget name, must be unique within a View",
                            "type": "string"
                          },
                          "planned_limits": {
                            "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
                            "type": "object",
                            "properties": {
                              "monthly": {
                                "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                                "type": "object",
                                "additionalProperties": {
                                  "description": "Amount for planned limit",
                                  "type": "object",
                                  "properties": {
                                    "amount": {
                                      "description": "String representation of a dollar amount",
                                      "type": "string",
                                      "pattern": "^\\d+(\\.\\d{1,})?$",
                                      "default": "1.0"
                                    }
                                  },
                                  "required": [
                                    "amount"
                                  ]
                                },
                                "example": {
                                  "2022-02-01T00:00:00+00:00": {
                                    "amount": "1000.00"
                                  }
                                }
                              }
                            },
                            "required": [
                              "monthly"
                            ],
                            "example": {
                              "monthly": {
                                "2022-02-01T00:00:00+00:00": {
                                  "amount": "1000.00"
                                }
                              }
                            }
                          },
                          "view": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "id"
                            ],
                            "description": "View associated with this Budget"
                          },
                          "alerts": {
                            "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string",
                              "enum": [
                                "Y",
                                "N"
                              ]
                            },
                            "example": {
                              "80": "N",
                              "100": "Y"
                            }
                          }
                        },
                        "required": [
                          "name",
                          "planned_limits",
                          "view"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "created": {
                            "description": "UTC timestamp for the creation of this entity",
                            "type": "string",
                            "pattern": "^\\d+(\\.\\d{1,})?$"
                          }
                        },
                        "required": [
                          "created"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "last_updated": {
                            "description": "UTC timestamp for the last update of this entity",
                            "type": "string",
                            "pattern": "^\\d+(\\.\\d{1,})?$"
                          }
                        },
                        "required": [
                          "last_updated"
                        ]
                      },
                      {
                        "type": "object",
                        "properties": {
                          "cost_type": {
                            "description": "Type of charges included in the cost calculation, currently supports the following values:\n  `real_cost`: filters your bill to only display charges directly related to consumption\n",
                            "type": "string",
                            "enum": [
                              "real_cost"
                            ]
                          },
                          "granularity": {
                            "description": "Supported periods, e.g. \"monthly\"",
                            "type": "string",
                            "enum": [
                              "monthly"
                            ]
                          }
                        },
                        "required": [
                          "cost_type",
                          "granularity"
                        ]
                      }
                    ]
                  },
                  {
                    "type": "object",
                    "properties": {
                      "current": {
                        "type": "object",
                        "properties": {
                          "actual": {
                            "type": "string"
                          },
                          "planned": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "actual",
                          "planned"
                        ]
                      }
                    },
                    "required": [
                      "current"
                    ]
                  }
                ]
              },
              {
                "type": "object",
                "properties": {
                  "burnup": {
                    "type": "object",
                    "properties": {
                      "daily": {
                        "type": "object",
                        "patternProperties": {
                          "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                            "type": "object",
                            "properties": {
                              "actual": {
                                "type": "string"
                              },
                              "planned": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "actual",
                              "planned"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "daily"
                    ]
                  }
                },
                "required": [
                  "burnup"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "history": {
                    "type": "object",
                    "properties": {
                      "monthly": {
                        "type": "object",
                        "patternProperties": {
                          "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                            "type": "object",
                            "properties": {
                              "actual": {
                                "type": "string"
                              },
                              "planned": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "actual",
                              "planned"
                            ]
                          }
                        }
                      },
                      "quarterly": {
                        "type": "object",
                        "patternProperties": {
                          "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                            "type": "object",
                            "properties": {
                              "actual": {
                                "type": "string"
                              },
                              "planned": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "actual",
                              "planned"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "monthly",
                      "quarterly"
                    ]
                  }
                },
                "required": [
                  "history"
                ]
              }
            ]
          }
        ]
      },
      "budget_alerts": {
        "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
        "type": "object",
        "additionalProperties": {
          "type": "string",
          "enum": [
            "Y",
            "N"
          ]
        },
        "example": {
          "80": "N",
          "100": "Y"
        }
      },
      "budget_alerts_value": {
        "type": "string",
        "enum": [
          "Y",
          "N"
        ]
      },
      "budget_new": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Budget name, must be unique within a View",
            "type": "string"
          },
          "planned_limits": {
            "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
            "type": "object",
            "properties": {
              "monthly": {
                "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                "type": "object",
                "additionalProperties": {
                  "description": "Amount for planned limit",
                  "type": "object",
                  "properties": {
                    "amount": {
                      "description": "String representation of a dollar amount",
                      "type": "string",
                      "pattern": "^\\d+(\\.\\d{1,})?$",
                      "default": "1.0"
                    }
                  },
                  "required": [
                    "amount"
                  ]
                },
                "example": {
                  "2022-02-01T00:00:00+00:00": {
                    "amount": "1000.00"
                  }
                }
              }
            },
            "required": [
              "monthly"
            ],
            "example": {
              "monthly": {
                "2022-02-01T00:00:00+00:00": {
                  "amount": "1000.00"
                }
              }
            }
          },
          "view": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "description": "View associated with this Budget"
          },
          "alerts": {
            "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "Y",
                "N"
              ]
            },
            "example": {
              "80": "N",
              "100": "Y"
            }
          }
        },
        "required": [
          "name",
          "planned_limits",
          "view"
        ]
      },
      "budget_update": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Budget name, must be unique within a View",
            "type": "string"
          },
          "planned_limits": {
            "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
            "type": "object",
            "properties": {
              "monthly": {
                "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
                "type": "object",
                "additionalProperties": {
                  "description": "Amount for planned limit",
                  "type": "object",
                  "properties": {
                    "amount": {
                      "description": "String representation of a dollar amount",
                      "type": "string",
                      "pattern": "^\\d+(\\.\\d{1,})?$",
                      "default": "1.0"
                    }
                  },
                  "required": [
                    "amount"
                  ]
                },
                "example": {
                  "2022-02-01T00:00:00+00:00": {
                    "amount": "1000.00"
                  }
                }
              }
            },
            "required": [
              "monthly"
            ],
            "example": {
              "monthly": {
                "2022-02-01T00:00:00+00:00": {
                  "amount": "1000.00"
                }
              }
            }
          },
          "view": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ],
            "description": "View associated with this Budget"
          },
          "alerts": {
            "description": "Mapping of `1-100` to `Y/N`, where\n  - `1-100` is the percentage of the budget at which to send an alert\n  - `Y/N` is whether or not to send the alert\n",
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "enum": [
                "Y",
                "N"
              ]
            },
            "example": {
              "80": "N",
              "100": "Y"
            }
          }
        }
      },
      "budget_get_all_expand": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "current"
          ]
        }
      },
      "budget_get_one_expand": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "current",
            "history",
            "burnup"
          ]
        }
      },
      "budget_planned_actual": {
        "type": "object",
        "properties": {
          "actual": {
            "type": "string"
          },
          "planned": {
            "type": "string"
          }
        },
        "required": [
          "actual",
          "planned"
        ]
      },
      "budget_burnup": {
        "type": "object",
        "properties": {
          "daily": {
            "type": "object",
            "patternProperties": {
              "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                "type": "object",
                "properties": {
                  "actual": {
                    "type": "string"
                  },
                  "planned": {
                    "type": "string"
                  }
                },
                "required": [
                  "actual",
                  "planned"
                ]
              }
            }
          }
        },
        "required": [
          "daily"
        ]
      },
      "budget_current": {
        "type": "object",
        "properties": {
          "actual": {
            "type": "string"
          },
          "planned": {
            "type": "string"
          }
        },
        "required": [
          "actual",
          "planned"
        ]
      },
      "budget_history": {
        "type": "object",
        "properties": {
          "monthly": {
            "type": "object",
            "patternProperties": {
              "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                "type": "object",
                "properties": {
                  "actual": {
                    "type": "string"
                  },
                  "planned": {
                    "type": "string"
                  }
                },
                "required": [
                  "actual",
                  "planned"
                ]
              }
            }
          },
          "quarterly": {
            "type": "object",
            "patternProperties": {
              "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
                "type": "object",
                "properties": {
                  "actual": {
                    "type": "string"
                  },
                  "planned": {
                    "type": "string"
                  }
                },
                "required": [
                  "actual",
                  "planned"
                ]
              }
            }
          }
        },
        "required": [
          "monthly",
          "quarterly"
        ]
      },
      "budget_date_planned_actual": {
        "type": "object",
        "patternProperties": {
          "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])(T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z|[+-](?:2[0-3]|[01][0-9]):[0-5][0-9])?)?$": {
            "type": "object",
            "properties": {
              "actual": {
                "type": "string"
              },
              "planned": {
                "type": "string"
              }
            },
            "required": [
              "actual",
              "planned"
            ]
          }
        }
      },
      "budget_sorting": {
        "allOf": [
          {
            "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
            "example": {
              "available": {
                "sort_keys": [
                  "last_updated"
                ],
                "sort_orders": [
                  "asc",
                  "desc"
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "available": {
                "type": "object",
                "properties": {
                  "sort_keys": {
                    "type": "array",
                    "items": {
                      "description": "Sortable Budget properties",
                      "type": "string",
                      "enum": [
                        "last_updated",
                        "name"
                      ]
                    },
                    "example": [
                      "last_updated",
                      "name"
                    ]
                  },
                  "sort_orders": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    },
                    "example": [
                      "asc",
                      "desc"
                    ]
                  }
                }
              },
              "current": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sort_key": {
                      "description": "Sortable Budget properties",
                      "type": "string",
                      "enum": [
                        "last_updated",
                        "name"
                      ]
                    },
                    "sort_order": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "budget_sort_keys": {
        "description": "Sortable Budget properties",
        "type": "string",
        "enum": [
          "last_updated",
          "name"
        ]
      },
      "budget_filtering": {
        "allOf": [
          {
            "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
            "type": "object",
            "properties": {
              "available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "valid_values": {
                      "type": "array"
                    },
                    "valid_types": {
                      "type": "array",
                      "items": "string"
                    }
                  }
                }
              },
              "current": {
                "type": "object",
                "additionalProperties": {
                  "type": "array"
                }
              }
            }
          }
        ]
      },
      "budget_planned_limits": {
        "description": "Mapping of `period` to planned budget limits for the given period. Supported `period`s are:\n  - `monthly`\n",
        "type": "object",
        "properties": {
          "monthly": {
            "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
            "type": "object",
            "additionalProperties": {
              "description": "Amount for planned limit",
              "type": "object",
              "properties": {
                "amount": {
                  "description": "String representation of a dollar amount",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$",
                  "default": "1.0"
                }
              },
              "required": [
                "amount"
              ]
            },
            "example": {
              "2022-02-01T00:00:00+00:00": {
                "amount": "1000.00"
              }
            }
          }
        },
        "required": [
          "monthly"
        ],
        "example": {
          "monthly": {
            "2022-02-01T00:00:00+00:00": {
              "amount": "1000.00"
            }
          }
        }
      },
      "budget_planned_limit": {
        "description": "Planned limit as a mapping of `date` to `amount`, where\n  - `date` is an timezone aware ISO Formatted string, e.g. `\"2022-02-01T00:00:00+00:00\"`\n  - `amount` is a Mapping of the literal string `\"amount\"` to a dollar amount, e.g. `{\"amount\": \"1000.00\"}`\n",
        "type": "object",
        "additionalProperties": {
          "description": "Amount for planned limit",
          "type": "object",
          "properties": {
            "amount": {
              "description": "String representation of a dollar amount",
              "type": "string",
              "pattern": "^\\d+(\\.\\d{1,})?$",
              "default": "1.0"
            }
          },
          "required": [
            "amount"
          ]
        },
        "example": {
          "2022-02-01T00:00:00+00:00": {
            "amount": "1000.00"
          }
        }
      },
      "costformation_definition_versions_sort_keys": {
        "description": "Sortable CloudZero CostFormation Definition Properties",
        "type": "string",
        "enum": [
          "version"
        ]
      },
      "costformation_definition_versions_sorting": {
        "allOf": [
          {
            "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
            "example": {
              "available": {
                "sort_keys": [
                  "last_updated"
                ],
                "sort_orders": [
                  "asc",
                  "desc"
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "available": {
                "type": "object",
                "properties": {
                  "sort_keys": {
                    "type": "array",
                    "items": {
                      "description": "Sortable CloudZero CostFormation Definition Properties",
                      "type": "string",
                      "enum": [
                        "version"
                      ]
                    },
                    "example": [
                      "version"
                    ]
                  },
                  "sort_orders": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    },
                    "example": [
                      "asc",
                      "desc"
                    ]
                  }
                }
              },
              "current": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sort_key": {
                      "description": "Sortable CloudZero CostFormation Definition Properties",
                      "type": "string",
                      "enum": [
                        "version"
                      ]
                    },
                    "sort_order": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "costformation_definition_versions_filtering": {
        "allOf": [
          {
            "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
            "type": "object",
            "properties": {
              "available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "valid_values": {
                      "type": "array"
                    },
                    "valid_types": {
                      "type": "array",
                      "items": "string"
                    }
                  }
                }
              },
              "current": {
                "type": "object",
                "additionalProperties": {
                  "type": "array"
                }
              }
            }
          }
        ]
      },
      "costformation_definition_version": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "version": {
                "type": "string"
              }
            },
            "required": [
              "version"
            ]
          },
          {
            "type": "object",
            "properties": {
              "last_updated": {
                "description": "UTC timestamp for the last update of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "last_updated_by": {
                "description": "email, username, or api key that created this entity (optional)",
                "type": "string"
              }
            }
          }
        ]
      },
      "costformation_definition_version_with_url": {
        "allOf": [
          {
            "allOf": [
              {
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string"
                  }
                },
                "required": [
                  "version"
                ]
              },
              {
                "type": "object",
                "properties": {
                  "last_updated": {
                    "description": "UTC timestamp for the last update of this entity",
                    "type": "string",
                    "pattern": "^\\d+(\\.\\d{1,})?$"
                  }
                }
              },
              {
                "type": "object",
                "properties": {
                  "last_updated_by": {
                    "description": "email, username, or api key that created this entity (optional)",
                    "type": "string"
                  }
                }
              }
            ]
          },
          {
            "type": "object",
            "properties": {
              "uri": {
                "type": "string",
                "format": "uri"
              }
            },
            "required": [
              "uri"
            ]
          }
        ]
      },
      "costformation_definition_versions": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "version": {
                  "type": "string"
                }
              },
              "required": [
                "version"
              ]
            },
            {
              "type": "object",
              "properties": {
                "last_updated": {
                  "description": "UTC timestamp for the last update of this entity",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$"
                }
              }
            },
            {
              "type": "object",
              "properties": {
                "last_updated_by": {
                  "description": "email, username, or api key that created this entity (optional)",
                  "type": "string"
                }
              }
            }
          ]
        }
      },
      "costformation_definition_versions_dsl_error": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "path": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "costformation_definition_versions_dsl_errors": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "error": {
              "type": "string"
            },
            "value": {
              "type": "string"
            },
            "path": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        }
      },
      "costformation_definition_version_create_request_error": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string"
              },
              "type": {
                "type": "string"
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    },
                    "path": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "views": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "name": {
                  "description": "View name",
                  "type": "string"
                },
                "filter": {
                  "description": "Filter mapping of dimension name to allowed values",
                  "type": "object",
                  "additionalProperties": {
                    "description": "filters",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "accounts": [
                      "123456789012"
                    ]
                  }
                },
                "connections": {
                  "description": "Contains the connections that will receive notifications for this view",
                  "type": "object",
                  "properties": {
                    "email": {
                      "description": "Email Connection",
                      "type": "object",
                      "properties": {
                        "addresses": {
                          "description": "List of email addresses to notify",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "include_all_organizers": {
                          "description": "Whether or not to additionally notifiy all organizers in the organization",
                          "type": "boolean"
                        }
                      }
                    },
                    "slack": {
                      "type": "array",
                      "items": {
                        "description": "Slack Connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ]
                      }
                    }
                  }
                },
                "principal_dimension": {
                  "description": "primary group by dimension for the view",
                  "type": "string"
                },
                "anomalies": {
                  "type": "object",
                  "description": "Anomalies configuration for the view. These fields are used to configure the anomaly detection for the view. \nAnomalies are detected by comparing the cost of a given day to the cost of the previous day. \nIf the cost of the current day is greater than or equal to the threshold, an anomaly event will be generated. \nThe anomaly event will be sent to the configured connections for the view. \nThe following fields are used to configure the anomaly detection:\n",
                  "properties": {
                    "enabled": {
                      "description": "Specifies whether or not to enable anomaly detection for the view.\n  `true` (Default): anomaly detection is enabled for the view\n  `false`: anomaly detection is disabled for the view\n",
                      "type": "boolean"
                    },
                    "threshold_type": {
                      "description": "Type of threshold to use when detecting anomalies within this view. This field, combined with the `threshold_value` \nfield sets the threshold for anomalies detected within this view. The threshold is used to determine if a day to day \ncost spike is considered an anomaly. The cost spike  must be greater \nor equal to the threshold in order generate an anomaly event. The following values are currently supported:\n  `Automatic`: the threshold will be automatically calculated using a sliding scale based on the view's cost\n  `Percent`: the threshold will be a percentage of the view's cost\n",
                      "type": "string",
                      "enum": [
                        "Automatic",
                        "Percent"
                      ]
                    },
                    "threshold_value": {
                      "description": "Value of the threshold to apply to anomalies for the specified view. The value is interpreted based on the `threshold_type`:\n  `Automatic`: threshold_value is ignored when the threshold type is `Automatic`\n  `Percent`: threshold_value is the percentage of the view's cost to use as the threshold\n",
                      "type": "integer"
                    }
                  }
                }
              },
              "required": [
                "name",
                "principal_dimension",
                "connections",
                "filter"
              ]
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "type": "object",
              "properties": {
                "last_updated": {
                  "description": "UTC timestamp for the last update of this entity",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$"
                }
              },
              "required": [
                "last_updated"
              ]
            }
          ]
        }
      },
      "view": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "name": {
                "description": "View name",
                "type": "string"
              },
              "filter": {
                "description": "Filter mapping of dimension name to allowed values",
                "type": "object",
                "additionalProperties": {
                  "description": "filters",
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "example": {
                  "accounts": [
                    "123456789012"
                  ]
                }
              },
              "connections": {
                "description": "Contains the connections that will receive notifications for this view",
                "type": "object",
                "properties": {
                  "email": {
                    "description": "Email Connection",
                    "type": "object",
                    "properties": {
                      "addresses": {
                        "description": "List of email addresses to notify",
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "include_all_organizers": {
                        "description": "Whether or not to additionally notifiy all organizers in the organization",
                        "type": "boolean"
                      }
                    }
                  },
                  "slack": {
                    "type": "array",
                    "items": {
                      "description": "Slack Connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "id",
                        "name"
                      ]
                    }
                  }
                }
              },
              "principal_dimension": {
                "description": "primary group by dimension for the view",
                "type": "string"
              },
              "anomalies": {
                "type": "object",
                "description": "Anomalies configuration for the view. These fields are used to configure the anomaly detection for the view. \nAnomalies are detected by comparing the cost of a given day to the cost of the previous day. \nIf the cost of the current day is greater than or equal to the threshold, an anomaly event will be generated. \nThe anomaly event will be sent to the configured connections for the view. \nThe following fields are used to configure the anomaly detection:\n",
                "properties": {
                  "enabled": {
                    "description": "Specifies whether or not to enable anomaly detection for the view.\n  `true` (Default): anomaly detection is enabled for the view\n  `false`: anomaly detection is disabled for the view\n",
                    "type": "boolean"
                  },
                  "threshold_type": {
                    "description": "Type of threshold to use when detecting anomalies within this view. This field, combined with the `threshold_value` \nfield sets the threshold for anomalies detected within this view. The threshold is used to determine if a day to day \ncost spike is considered an anomaly. The cost spike  must be greater \nor equal to the threshold in order generate an anomaly event. The following values are currently supported:\n  `Automatic`: the threshold will be automatically calculated using a sliding scale based on the view's cost\n  `Percent`: the threshold will be a percentage of the view's cost\n",
                    "type": "string",
                    "enum": [
                      "Automatic",
                      "Percent"
                    ]
                  },
                  "threshold_value": {
                    "description": "Value of the threshold to apply to anomalies for the specified view. The value is interpreted based on the `threshold_type`:\n  `Automatic`: threshold_value is ignored when the threshold type is `Automatic`\n  `Percent`: threshold_value is the percentage of the view's cost to use as the threshold\n",
                    "type": "integer"
                  }
                }
              }
            },
            "required": [
              "name",
              "principal_dimension",
              "connections",
              "filter"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "last_updated": {
                "description": "UTC timestamp for the last update of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "last_updated"
            ]
          }
        ]
      },
      "view_new": {
        "type": "object",
        "properties": {
          "name": {
            "description": "View name",
            "type": "string"
          },
          "filter": {
            "description": "Filter mapping of dimension name to allowed values",
            "type": "object",
            "additionalProperties": {
              "description": "filters",
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": {
              "accounts": [
                "123456789012"
              ]
            }
          },
          "connections": {
            "description": "Contains the connections that will receive notifications for this view",
            "type": "object",
            "properties": {
              "email": {
                "description": "Email Connection",
                "type": "object",
                "properties": {
                  "addresses": {
                    "description": "List of email addresses to notify",
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "include_all_organizers": {
                    "description": "Whether or not to additionally notifiy all organizers in the organization",
                    "type": "boolean"
                  }
                }
              },
              "slack": {
                "type": "array",
                "items": {
                  "description": "Slack Connection",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              }
            }
          },
          "principal_dimension": {
            "description": "primary group by dimension for the view",
            "type": "string"
          },
          "anomalies": {
            "type": "object",
            "description": "Anomalies configuration for the view. These fields are used to configure the anomaly detection for the view. \nAnomalies are detected by comparing the cost of a given day to the cost of the previous day. \nIf the cost of the current day is greater than or equal to the threshold, an anomaly event will be generated. \nThe anomaly event will be sent to the configured connections for the view. \nThe following fields are used to configure the anomaly detection:\n",
            "properties": {
              "enabled": {
                "description": "Specifies whether or not to enable anomaly detection for the view.\n  `true` (Default): anomaly detection is enabled for the view\n  `false`: anomaly detection is disabled for the view\n",
                "type": "boolean"
              },
              "threshold_type": {
                "description": "Type of threshold to use when detecting anomalies within this view. This field, combined with the `threshold_value` \nfield sets the threshold for anomalies detected within this view. The threshold is used to determine if a day to day \ncost spike is considered an anomaly. The cost spike  must be greater \nor equal to the threshold in order generate an anomaly event. The following values are currently supported:\n  `Automatic`: the threshold will be automatically calculated using a sliding scale based on the view's cost\n  `Percent`: the threshold will be a percentage of the view's cost\n",
                "type": "string",
                "enum": [
                  "Automatic",
                  "Percent"
                ]
              },
              "threshold_value": {
                "description": "Value of the threshold to apply to anomalies for the specified view. The value is interpreted based on the `threshold_type`:\n  `Automatic`: threshold_value is ignored when the threshold type is `Automatic`\n  `Percent`: threshold_value is the percentage of the view's cost to use as the threshold\n",
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "name",
          "principal_dimension",
          "connections",
          "filter"
        ]
      },
      "view_anomalies": {
        "type": "object",
        "description": "Anomalies configuration for the view. These fields are used to configure the anomaly detection for the view. \nAnomalies are detected by comparing the cost of a given day to the cost of the previous day. \nIf the cost of the current day is greater than or equal to the threshold, an anomaly event will be generated. \nThe anomaly event will be sent to the configured connections for the view. \nThe following fields are used to configure the anomaly detection:\n",
        "properties": {
          "enabled": {
            "description": "Specifies whether or not to enable anomaly detection for the view.\n  `true` (Default): anomaly detection is enabled for the view\n  `false`: anomaly detection is disabled for the view\n",
            "type": "boolean"
          },
          "threshold_type": {
            "description": "Type of threshold to use when detecting anomalies within this view. This field, combined with the `threshold_value` \nfield sets the threshold for anomalies detected within this view. The threshold is used to determine if a day to day \ncost spike is considered an anomaly. The cost spike  must be greater \nor equal to the threshold in order generate an anomaly event. The following values are currently supported:\n  `Automatic`: the threshold will be automatically calculated using a sliding scale based on the view's cost\n  `Percent`: the threshold will be a percentage of the view's cost\n",
            "type": "string",
            "enum": [
              "Automatic",
              "Percent"
            ]
          },
          "threshold_value": {
            "description": "Value of the threshold to apply to anomalies for the specified view. The value is interpreted based on the `threshold_type`:\n  `Automatic`: threshold_value is ignored when the threshold type is `Automatic`\n  `Percent`: threshold_value is the percentage of the view's cost to use as the threshold\n",
            "type": "integer"
          }
        }
      },
      "view_anomalies_threshold_type": {
        "description": "Type of threshold to use when detecting anomalies within this view. This field, combined with the `threshold_value` \nfield sets the threshold for anomalies detected within this view. The threshold is used to determine if a day to day \ncost spike is considered an anomaly. The cost spike  must be greater \nor equal to the threshold in order generate an anomaly event. The following values are currently supported:\n  `Automatic`: the threshold will be automatically calculated using a sliding scale based on the view's cost\n  `Percent`: the threshold will be a percentage of the view's cost\n",
        "type": "string",
        "enum": [
          "Automatic",
          "Percent"
        ]
      },
      "view_anomalies_threshold_value": {
        "description": "Value of the threshold to apply to anomalies for the specified view. The value is interpreted based on the `threshold_type`:\n  `Automatic`: threshold_value is ignored when the threshold type is `Automatic`\n  `Percent`: threshold_value is the percentage of the view's cost to use as the threshold\n",
        "type": "integer"
      },
      "view_connections": {
        "description": "Contains the connections that will receive notifications for this view",
        "type": "object",
        "properties": {
          "email": {
            "description": "Email Connection",
            "type": "object",
            "properties": {
              "addresses": {
                "description": "List of email addresses to notify",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "include_all_organizers": {
                "description": "Whether or not to additionally notifiy all organizers in the organization",
                "type": "boolean"
              }
            }
          },
          "slack": {
            "type": "array",
            "items": {
              "description": "Slack Connection",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "name"
              ]
            }
          }
        }
      },
      "view_connections_email": {
        "description": "Email Connection",
        "type": "object",
        "properties": {
          "addresses": {
            "description": "List of email addresses to notify",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "include_all_organizers": {
            "description": "Whether or not to additionally notifiy all organizers in the organization",
            "type": "boolean"
          }
        }
      },
      "view_connections_slack": {
        "description": "Slack Connection",
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "view_filter": {
        "description": "Filter mapping of dimension name to allowed values",
        "type": "object",
        "additionalProperties": {
          "description": "filters",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "example": {
          "accounts": [
            "123456789012"
          ]
        }
      },
      "view_principal_dimension": {
        "description": "primary group by dimension for the view",
        "type": "string"
      },
      "view_sort_keys": {
        "description": "Sortable View properties",
        "type": "string",
        "enum": [
          "last_updated"
        ]
      },
      "view_sorting": {
        "allOf": [
          {
            "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
            "example": {
              "available": {
                "sort_keys": [
                  "last_updated"
                ],
                "sort_orders": [
                  "asc",
                  "desc"
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "available": {
                "type": "object",
                "properties": {
                  "sort_keys": {
                    "type": "array",
                    "items": {
                      "description": "Sortable View properties",
                      "type": "string",
                      "enum": [
                        "last_updated"
                      ]
                    },
                    "example": [
                      "last_updated"
                    ]
                  },
                  "sort_orders": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    },
                    "example": [
                      "asc",
                      "desc"
                    ]
                  }
                }
              },
              "current": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sort_key": {
                      "description": "Sortable View properties",
                      "type": "string",
                      "enum": [
                        "last_updated"
                      ]
                    },
                    "sort_order": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "view_filtering": {
        "allOf": [
          {
            "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
            "type": "object",
            "properties": {
              "available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "valid_values": {
                      "type": "array"
                    },
                    "valid_types": {
                      "type": "array",
                      "items": "string"
                    }
                  }
                }
              },
              "current": {
                "type": "object",
                "additionalProperties": {
                  "type": "array"
                }
              }
            }
          }
        ]
      },
      "anycost_stream_connection_billing_drop_summaries": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "drop_id": {
              "type": "string"
            },
            "month": {
              "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
              "type": "string",
              "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
              "default": "2025-01-01T00:00:00Z"
            },
            "row_count": {
              "type": "integer"
            }
          }
        }
      },
      "anycost_stream_connection_billing_drop_summary": {
        "type": "object",
        "properties": {
          "drop_id": {
            "type": "string"
          },
          "month": {
            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
            "type": "string",
            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
            "default": "2025-01-01T00:00:00Z"
          },
          "row_count": {
            "type": "integer"
          }
        }
      },
      "anycost_stream_connection_validate_billing_drop_summary": {
        "type": "object",
        "properties": {
          "is_valid": {
            "type": "boolean"
          },
          "errors": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "anycost_stream_connection_billing_drop": {
        "type": "object",
        "properties": {
          "month": {
            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
            "type": "string",
            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
            "default": "2025-01-01T00:00:00Z"
          },
          "operation": {
            "description": "The type of operation to perform on the data.\n- `replace_drop`: Replace the data with the new data.\n- `replace_hourly`: Replace the data that have overlapping hours with the new data\n- `sum`: Append data to the existing data\nIf no prior data exists, a new drop with `data` will be created\n",
            "type": "string",
            "default": "replace_drop",
            "enum": [
              "replace_drop",
              "replace_hourly",
              "sum"
            ]
          },
          "data": {
            "type": "array",
            "items": {
              "description": "https://docs.cloudzero.com/docs/anycost-common-bill-format-cbf#data-file-columns",
              "type": "object",
              "properties": {
                "lineitem/id": {
                  "type": "string"
                },
                "lineitem/type": {
                  "type": "string",
                  "default": "Usage",
                  "enum": [
                    "Usage",
                    "Tax",
                    "Support",
                    "Purchase",
                    "CommittedUsePurchase",
                    "Discount",
                    "Credit",
                    "Fee",
                    "Adjustment"
                  ]
                },
                "lineitem/description": {
                  "type": "string"
                },
                "time/usage_start": {
                  "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                  "type": "string",
                  "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                  "default": "2025-01-01T00:00:00Z"
                },
                "time/usage_end": {
                  "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
                  "type": "string",
                  "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
                  "default": "2025-01-01T00:00:00Z"
                },
                "resource/id": {
                  "type": "string"
                },
                "resource/service": {
                  "type": "string"
                },
                "resource/account": {
                  "type": "string"
                },
                "resource/region": {
                  "type": "string"
                },
                "resource/usage_family": {
                  "type": "string"
                },
                "action/operation": {
                  "type": "string"
                },
                "action/usage_type": {
                  "type": "string"
                },
                "action/region": {
                  "type": "string"
                },
                "action/account": {
                  "type": "string"
                },
                "usage/amount": {
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$",
                  "default": "1.0"
                },
                "usage/units": {
                  "type": "string",
                  "default": "1"
                },
                "cost/cost": {
                  "description": "String representation of a dollar amount",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$",
                  "default": "1.0"
                },
                "cost/discounted_cost": {
                  "description": "String representation of a dollar amount",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$",
                  "default": "1.0"
                },
                "cost/amortized_cost": {
                  "description": "String representation of a dollar amount",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$",
                  "default": "1.0"
                },
                "cost/discounted_amortized_cost": {
                  "description": "String representation of a dollar amount",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$",
                  "default": "1.0"
                },
                "cost/on_demand_cost": {
                  "description": "String representation of a dollar amount",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$",
                  "default": "1.0"
                },
                "bill/invoice_id": {
                  "type": "string"
                },
                "k8s/cluster": {
                  "type": "string"
                },
                "k8s/namespace": {
                  "type": "string"
                },
                "k8s/deployment": {
                  "type": "string"
                },
                "k8s/labels": {
                  "type": "string"
                }
              },
              "patternProperties": {
                "resource/tag:.+": {
                  "type": "string"
                }
              },
              "required": [
                "time/usage_start",
                "cost/cost"
              ]
            }
          }
        },
        "required": [
          "data"
        ]
      },
      "cbf_row": {
        "description": "https://docs.cloudzero.com/docs/anycost-common-bill-format-cbf#data-file-columns",
        "type": "object",
        "properties": {
          "lineitem/id": {
            "type": "string"
          },
          "lineitem/type": {
            "type": "string",
            "default": "Usage",
            "enum": [
              "Usage",
              "Tax",
              "Support",
              "Purchase",
              "CommittedUsePurchase",
              "Discount",
              "Credit",
              "Fee",
              "Adjustment"
            ]
          },
          "lineitem/description": {
            "type": "string"
          },
          "time/usage_start": {
            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
            "type": "string",
            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
            "default": "2025-01-01T00:00:00Z"
          },
          "time/usage_end": {
            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
            "type": "string",
            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
            "default": "2025-01-01T00:00:00Z"
          },
          "resource/id": {
            "type": "string"
          },
          "resource/service": {
            "type": "string"
          },
          "resource/account": {
            "type": "string"
          },
          "resource/region": {
            "type": "string"
          },
          "resource/usage_family": {
            "type": "string"
          },
          "action/operation": {
            "type": "string"
          },
          "action/usage_type": {
            "type": "string"
          },
          "action/region": {
            "type": "string"
          },
          "action/account": {
            "type": "string"
          },
          "usage/amount": {
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$",
            "default": "1.0"
          },
          "usage/units": {
            "type": "string",
            "default": "1"
          },
          "cost/cost": {
            "description": "String representation of a dollar amount",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$",
            "default": "1.0"
          },
          "cost/discounted_cost": {
            "description": "String representation of a dollar amount",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$",
            "default": "1.0"
          },
          "cost/amortized_cost": {
            "description": "String representation of a dollar amount",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$",
            "default": "1.0"
          },
          "cost/discounted_amortized_cost": {
            "description": "String representation of a dollar amount",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$",
            "default": "1.0"
          },
          "cost/on_demand_cost": {
            "description": "String representation of a dollar amount",
            "type": "string",
            "pattern": "^\\d+(\\.\\d{1,})?$",
            "default": "1.0"
          },
          "bill/invoice_id": {
            "type": "string"
          },
          "k8s/cluster": {
            "type": "string"
          },
          "k8s/namespace": {
            "type": "string"
          },
          "k8s/deployment": {
            "type": "string"
          },
          "k8s/labels": {
            "type": "string"
          }
        },
        "patternProperties": {
          "resource/tag:.+": {
            "type": "string"
          }
        },
        "required": [
          "time/usage_start",
          "cost/cost"
        ]
      },
      "billing_connections": {
        "type": "array",
        "items": {
          "allOf": [
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "connection_type": {
                  "type": "string"
                },
                "cloud_provider": {
                  "type": "string"
                },
                "s3_bucket_info": {
                  "type": "object",
                  "properties": {
                    "bucket_name": {
                      "type": "string",
                      "example": [
                        "test-bucket"
                      ]
                    },
                    "bucket_path": {
                      "type": "string",
                      "example": [
                        "path/to/data"
                      ]
                    },
                    "cloud_account_id": {
                      "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "bucket_name",
                    "bucket_path"
                  ]
                },
                "expected_ingest_rate": {
                  "type": "number",
                  "format": "float"
                },
                "is_enabled": {
                  "type": "boolean"
                },
                "capabilities": {
                  "type": "object"
                },
                "is_draft": {
                  "type": "boolean"
                },
                "connection_id": {
                  "type": "string"
                }
              },
              "required": [
                "name",
                "connection_type",
                "cloud_provider",
                "s3_bucket_info",
                "expected_ingest_rate",
                "is_enabled",
                "capabilities",
                "is_draft",
                "connection_id"
              ]
            },
            {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "type": "object",
              "properties": {
                "created": {
                  "description": "UTC timestamp for the creation of this entity",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$"
                }
              },
              "required": [
                "created"
              ]
            },
            {
              "type": "object",
              "properties": {
                "last_updated": {
                  "description": "UTC timestamp for the last update of this entity",
                  "type": "string",
                  "pattern": "^\\d+(\\.\\d{1,})?$"
                }
              },
              "required": [
                "last_updated"
              ]
            }
          ]
        }
      },
      "billing_connection": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "connection_type": {
                "type": "string"
              },
              "cloud_provider": {
                "type": "string"
              },
              "s3_bucket_info": {
                "type": "object",
                "properties": {
                  "bucket_name": {
                    "type": "string",
                    "example": [
                      "test-bucket"
                    ]
                  },
                  "bucket_path": {
                    "type": "string",
                    "example": [
                      "path/to/data"
                    ]
                  },
                  "cloud_account_id": {
                    "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                    "type": "string"
                  }
                },
                "required": [
                  "bucket_name",
                  "bucket_path"
                ]
              },
              "expected_ingest_rate": {
                "type": "number",
                "format": "float"
              },
              "is_enabled": {
                "type": "boolean"
              },
              "capabilities": {
                "type": "object"
              },
              "is_draft": {
                "type": "boolean"
              },
              "connection_id": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "connection_type",
              "cloud_provider",
              "s3_bucket_info",
              "expected_ingest_rate",
              "is_enabled",
              "capabilities",
              "is_draft",
              "connection_id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              }
            },
            "required": [
              "id"
            ]
          },
          {
            "type": "object",
            "properties": {
              "created": {
                "description": "UTC timestamp for the creation of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "created"
            ]
          },
          {
            "type": "object",
            "properties": {
              "last_updated": {
                "description": "UTC timestamp for the last update of this entity",
                "type": "string",
                "pattern": "^\\d+(\\.\\d{1,})?$"
              }
            },
            "required": [
              "last_updated"
            ]
          }
        ]
      },
      "billing_connection_new": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "cloud_provider": {
            "type": "string",
            "example": [
              "NewRelic",
              "MongoDB"
            ]
          },
          "expected_ingest_rate": {
            "type": [
              "number",
              null
            ]
          },
          "is_enabled": {
            "type": "boolean"
          },
          "s3_bucket_info": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "bucket_name": {
                    "type": "string",
                    "example": [
                      "test-bucket"
                    ]
                  },
                  "bucket_path": {
                    "type": "string",
                    "example": [
                      "path/to/data"
                    ]
                  },
                  "cloud_account_id": {
                    "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                    "type": "string"
                  }
                },
                "required": [
                  "bucket_name",
                  "bucket_path"
                ]
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "required": [
          "name",
          "cloud_provider"
        ]
      },
      "s3_bucket_info_new": {
        "type": "object",
        "properties": {
          "bucket_name": {
            "type": "string",
            "example": [
              "test-bucket"
            ]
          },
          "bucket_path": {
            "type": "string",
            "example": [
              "path/to/data"
            ]
          },
          "cloud_account_id": {
            "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
            "type": "string"
          }
        },
        "required": [
          "bucket_name",
          "bucket_path"
        ]
      },
      "billing_connection_update": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "expected_ingest_rate": {
            "type": [
              "number",
              null
            ]
          },
          "is_enabled": {
            "type": "boolean"
          },
          "s3_bucket_info": {
            "anyOf": [
              {
                "type": "object",
                "properties": {
                  "bucket_name": {
                    "type": "string",
                    "example": [
                      "test-bucket"
                    ]
                  },
                  "bucket_path": {
                    "type": "string",
                    "example": [
                      "path/to/data"
                    ]
                  },
                  "cloud_account_id": {
                    "type": [
                      "string",
                      null
                    ],
                    "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into."
                  }
                }
              },
              {
                "type": "null"
              }
            ]
          }
        }
      },
      "s3_bucket_info_update": {
        "type": "object",
        "properties": {
          "bucket_name": {
            "type": "string",
            "example": [
              "test-bucket"
            ]
          },
          "bucket_path": {
            "type": "string",
            "example": [
              "path/to/data"
            ]
          },
          "cloud_account_id": {
            "type": [
              "string",
              null
            ],
            "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into."
          }
        }
      },
      "billing_connection_existing": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "connection_type": {
            "type": "string"
          },
          "cloud_provider": {
            "type": "string"
          },
          "s3_bucket_info": {
            "type": "object",
            "properties": {
              "bucket_name": {
                "type": "string",
                "example": [
                  "test-bucket"
                ]
              },
              "bucket_path": {
                "type": "string",
                "example": [
                  "path/to/data"
                ]
              },
              "cloud_account_id": {
                "description": "This is the AWS Account ID with the S3 Bucket that the AnyCost Adaptor will be writing Common Bill Format files into.",
                "type": "string"
              }
            },
            "required": [
              "bucket_name",
              "bucket_path"
            ]
          },
          "expected_ingest_rate": {
            "type": "number",
            "format": "float"
          },
          "is_enabled": {
            "type": "boolean"
          },
          "capabilities": {
            "type": "object"
          },
          "is_draft": {
            "type": "boolean"
          },
          "connection_id": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "connection_type",
          "cloud_provider",
          "s3_bucket_info",
          "expected_ingest_rate",
          "is_enabled",
          "capabilities",
          "is_draft",
          "connection_id"
        ]
      },
      "billing_connection_sort_keys": {
        "description": "Sortable Billing Connection properties",
        "type": "string",
        "enum": [
          "connection_name",
          "creation_date",
          "name",
          "cloud_provider",
          "created",
          "last_updated",
          "is_enabled"
        ]
      },
      "billing_connection_sorting": {
        "allOf": [
          {
            "description": "This response key contains sorting options, where:\n  - `available`: is an object with two keys:\n      - `sort_keys`: list of available sort keys\n      - `sort_orders`: list of available sort orders\n  - `current`: is an array of `{sort_key: sort_order}` objects, the response is sorted in order of this array\n",
            "example": {
              "available": {
                "sort_keys": [
                  "last_updated"
                ],
                "sort_orders": [
                  "asc",
                  "desc"
                ]
              }
            }
          },
          {
            "type": "object",
            "properties": {
              "available": {
                "type": "object",
                "properties": {
                  "sort_keys": {
                    "type": "array",
                    "items": {
                      "description": "Sortable Billing Connection properties",
                      "type": "string",
                      "enum": [
                        "connection_name",
                        "creation_date",
                        "name",
                        "cloud_provider",
                        "created",
                        "last_updated",
                        "is_enabled"
                      ]
                    },
                    "example": [
                      "last_updated"
                    ]
                  },
                  "sort_orders": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    },
                    "example": [
                      "asc",
                      "desc"
                    ]
                  }
                }
              },
              "current": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "sort_key": {
                      "description": "Sortable Billing Connection properties",
                      "type": "string",
                      "enum": [
                        "connection_name",
                        "creation_date",
                        "name",
                        "cloud_provider",
                        "created",
                        "last_updated",
                        "is_enabled"
                      ]
                    },
                    "sort_order": {
                      "type": "string",
                      "enum": [
                        "asc",
                        "desc"
                      ]
                    }
                  }
                }
              }
            }
          }
        ]
      },
      "billing_connection_filtering": {
        "allOf": [
          {
            "description": "This response key contains filtering options, where:\n  - `available`: is an array of filterable field objects\n  - `current`: is an object containing the currently filtered fields and the filter values\n",
            "type": "object",
            "properties": {
              "available": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "valid_values": {
                      "type": "array"
                    },
                    "valid_types": {
                      "type": "array",
                      "items": "string"
                    }
                  }
                }
              },
              "current": {
                "type": "object",
                "additionalProperties": {
                  "type": "array"
                }
              }
            }
          }
        ]
      },
      "billing_granularity": {
        "description": "Supported periods, e.g. \"daily\"",
        "type": "string",
        "enum": [
          "hourly",
          "daily",
          "weekly",
          "monthly",
          "yearly"
        ],
        "default": "daily"
      },
      "billing_cost_type": {
        "description": "https://docs.cloudzero.com/docs/explorer#cost-types",
        "type": "string",
        "enum": [
          "billed_cost",
          "discounted_cost",
          "amortized_cost",
          "discounted_amortized_cost",
          "real_cost",
          "on_demand_cost",
          "invoiced_amortized_cost",
          "usage_amount"
        ],
        "default": "real_cost"
      },
      "billing_costs": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "Cost for a given usage date and set of group_by dimensions.\nThe response will contain additional fields based on the group by parameters passed in.\n\nYour response will look similar to this (with `Region` group by field as an example):\n\n \n `{\n\n\n    \"costs\": \n\n\n      [\n\n\n        {\n          \"usage_date\": \"2023-10-02T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-east-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-02T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-west-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-21T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-east-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-22T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-west-1\"\n        } \n\n\n      ],\n\n\n    \"pagination\": \n\n\n      {\n        \"page_count\": 1,\n        \"item_count\": 32,\n        \"total_count\": 32,\n        \"cursor\": {\n          \"next_cursor\": null,\n          \"previous_cursor\": null,\n          \"has_next\": false,\n          \"has_previous\": false\n        }\n      },\n\n\n    \"sorting\": \n\n\n      {\n        \"available\": {\n          \"sort_keys\": [\n            \"usage_date\"\n          ],\n          \"sort_orders\": [\n            \"asc\"\n          ]\n        },\n        \"current\": [\n          {\n            \"sort_key\": \"usage_date\",\n            \"sort_order\": \"asc\"\n          }\n        ]\n      },\n\n\n    \"filtering\": \n\n\n     {\n        \"available\": [],\n        \"current\": {}\n      },\n\n\n      \"total_count\": 32\n\n      \n  }`\n",
          "properties": {
            "usage_date": {
              "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
              "type": "string",
              "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
              "default": "2025-01-01T00:00:00Z"
            },
            "cost": {
              "type": "number",
              "format": "float"
            }
          }
        }
      },
      "billing_cost": {
        "type": "object",
        "description": "Cost for a given usage date and set of group_by dimensions.\nThe response will contain additional fields based on the group by parameters passed in.\n\nYour response will look similar to this (with `Region` group by field as an example):\n\n \n `{\n\n\n    \"costs\": \n\n\n      [\n\n\n        {\n          \"usage_date\": \"2023-10-02T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-east-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-02T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-west-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-21T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-east-1\"\n        },\n\n\n        {\n          \"usage_date\": \"2023-10-22T21:00:00+00:00\",\n          \"cost\": 0,\n          \"Region\": \"us-west-1\"\n        } \n\n\n      ],\n\n\n    \"pagination\": \n\n\n      {\n        \"page_count\": 1,\n        \"item_count\": 32,\n        \"total_count\": 32,\n        \"cursor\": {\n          \"next_cursor\": null,\n          \"previous_cursor\": null,\n          \"has_next\": false,\n          \"has_previous\": false\n        }\n      },\n\n\n    \"sorting\": \n\n\n      {\n        \"available\": {\n          \"sort_keys\": [\n            \"usage_date\"\n          ],\n          \"sort_orders\": [\n            \"asc\"\n          ]\n        },\n        \"current\": [\n          {\n            \"sort_key\": \"usage_date\",\n            \"sort_order\": \"asc\"\n          }\n        ]\n      },\n\n\n    \"filtering\": \n\n\n     {\n        \"available\": [],\n        \"current\": {}\n      },\n\n\n      \"total_count\": 32\n\n      \n  }`\n",
        "properties": {
          "usage_date": {
            "description": "ISO 8601 datetime string (e.g., 2023-10-26T14:27:46+00:00)",
            "type": "string",
            "pattern": "^\\d{4}-\\d\\d-\\d\\dT\\d\\d:\\d\\d:\\d\\d(\\.\\d+)?(([+-]\\d\\d:\\d\\d)|Z)?$",
            "default": "2025-01-01T00:00:00Z"
          },
          "cost": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "billing_dimensions": {
        "type": "array",
        "items": {
          "type": "object",
          "description": "A CloudZero dimension available for use in our APIs and CostFormation.\n",
          "properties": {
            "id": {
              "description": "Identifier of a CloudZero Dimension, as used in the CostFormation language.\nSee https://docs.cloudzero.com/docs/dimensions for details.\n",
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        }
      },
      "billing_dimension": {
        "type": "object",
        "description": "A CloudZero dimension available for use in our APIs and CostFormation.\n",
        "properties": {
          "id": {
            "description": "Identifier of a CloudZero Dimension, as used in the CostFormation language.\nSee https://docs.cloudzero.com/docs/dimensions for details.\n",
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "APIKeyAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  }
}